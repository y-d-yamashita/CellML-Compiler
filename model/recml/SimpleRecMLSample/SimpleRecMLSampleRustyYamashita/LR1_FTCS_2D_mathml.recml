
		 (  ( membrane.V[  ( n + (double)1 )  ][ j ][ l ] - membrane.V[ n ][ j ][ l ] )  / deltat )  ==  (  (  ( - (double)1 )  / membrane.C[ n ][ j ][ l ] )  *  ( membrane.I_stim[ n ][ j ][ l ] + membrane.i_Na[ n ][ j ][ l ] + membrane.i_si[ n ][ j ][ l ] + membrane.i_K[ n ][ j ][ l ] + membrane.i_K1[ n ][ j ][ l ] + membrane.i_Kp[ n ][ j ][ l ] + membrane.i_b[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><divide/>
				<apply><minus/>
					<apply><selector/>
						<ci> membrane.V </ci>
						<apply><plus/>
							<ci> n </ci>
							<cn> (double)1 </cn>
						</apply>
						<ci> j </ci>
						<ci> l </ci>
					</apply>
					<apply><selector/>
						<ci> membrane.V </ci>
						<ci> n </ci>
						<ci> j </ci>
						<ci> l </ci>
					</apply>
				</apply>
				<ci> deltat </ci>
			</apply>
			<apply><times/>
				<apply><divide/>
					<apply><minus/>
					<cn> (double)1 </cn>
				</apply>
					<apply><selector/>
					<ci> membrane.C </ci>
					<ci> n </ci>
					<ci> j </ci>
					<ci> l </ci>
				</apply>
				</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.I_stim </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.i_Na </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.i_si </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.i_K </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.i_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.i_Kp </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.i_b </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		fast_sodium_current.E_Na[ n ][ j ][ l ] ==  (  (  ( membrane.R[ n ][ j ][ l ] * membrane.T[ n ][ j ][ l ] )  / membrane.F[ n ][ j ][ l ] )  * log(  ( time_dependent_potassium_current.Nao[ n ][ j ][ l ] / time_dependent_potassium_current.Nai[ n ][ j ][ l ] )  ) ) 
		<apply><eq/>
			<apply><selector/>
			<ci> fast_sodium_current.E_Na </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><divide/>
			<apply><times/>
		<apply><selector/>
			<ci> membrane.R </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.T </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><selector/>
			<ci> membrane.F </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><ln/>
			<apply><divide/>
			<apply><selector/>
			<ci> time_dependent_potassium_current.Nao </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.Nai </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		membrane.i_Na[ n ][ j ][ l ] ==  ( fast_sodium_current.g_Na[ n ][ j ][ l ] * pow( fast_sodium_current.m[ n ][ j ][ l ] , (double)3 ) * fast_sodium_current.h[ n ][ j ][ l ] * fast_sodium_current.j[ n ][ j ][ l ] *  ( membrane.V[ n ][ j ][ l ] - fast_sodium_current.E_Na[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> membrane.i_Na </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> fast_sodium_current.g_Na </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><power/>
			<apply><selector/>
			<ci> fast_sodium_current.m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)3 </cn>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.E_Na </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		fast_sodium_current_m_gate.alpha_m[ n ][ j ][ l ] ==  (  ( (double)0.32 *  ( membrane.V[ n ][ j ][ l ] + (double)47.13 )  )  /  ( (double)1 - exp(  (  ( - (double)0.1 )  *  ( membrane.V[ n ][ j ][ l ] + (double)47.13 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> fast_sodium_current_m_gate.alpha_m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.32 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)47.13 </cn>
		</apply>
		</apply>
			<apply><minus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.1 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)47.13 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		fast_sodium_current_m_gate.beta_m[ n ][ j ][ l ] ==  ( (double)0.08 * exp(  (  ( - membrane.V[ n ][ j ][ l ] )  / (double)11 )  ) ) 
		<apply><eq/>
			<apply><selector/>
			<ci> fast_sodium_current_m_gate.beta_m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<cn> (double)0.08 </cn>
			<apply><exp/>
			<apply><divide/>
			<apply><minus/>
		   <apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<cn> (double)11 </cn>
		</apply>
		</apply>
		</apply>
		</apply>

		 (  ( fast_sodium_current.m[  ( n + (double)1 )  ][ j ][ l ] - fast_sodium_current.m[ n ][ j ][ l ] )  / deltat )  ==  (  ( fast_sodium_current_m_gate.alpha_m[ n ][ j ][ l ] *  ( (double)1 - fast_sodium_current.m[ n ][ j ][ l ] )  )  -  ( fast_sodium_current_m_gate.beta_m[ n ][ j ][ l ] * fast_sodium_current.m[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><divide/>
			<apply><minus/>
			<apply><selector/>
			<ci> fast_sodium_current.m </ci>
			<apply><plus/>
			<ci> n </ci>
			<cn> (double)1 </cn>
		</apply>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<ci> deltat </ci>
		</apply>
			<apply><minus/>
			<apply><times/>
		<apply><selector/>
			<ci> fast_sodium_current_m_gate.alpha_m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<cn> (double)1 </cn>
			<apply><selector/>
			<ci> fast_sodium_current.m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> fast_sodium_current_m_gate.beta_m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.m </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		fast_sodium_current_h_gate.alpha_h[ n ][ j ][ l ] ==  (  ( membrane.V[ n ][ j ][ l ] <  ( - (double)40 )  )  ?  ( (double)0.135 * exp(  (  ( (double)80 + membrane.V[ n ][ j ][ l ] )  /  ( - (double)6.8 )  )  ) )  : (double)0 ) 
		<apply><eq/>
			<apply><selector/>
			<ci> fast_sodium_current_h_gate.alpha_h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<piecewise>
		   <piece>
			<apply><times/>
		<cn> (double)0.135 </cn>
			<apply><exp/>
			<apply><divide/>
			<apply><plus/>
			<cn> (double)80 </cn>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><minus/>
		   <cn> (double)6.8 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><lt/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
		   <cn> (double)40 </cn>
		</apply>
		</apply>
		</piece><otherwise>
			<cn> (double)0 </cn>
		</otherwise>
		</piecewise>
		</apply>

		fast_sodium_current_h_gate.beta_h[ n ][ j ][ l ] ==  (  ( membrane.V[ n ][ j ][ l ] <  ( - (double)40 )  )  ?  (  ( (double)3.56 * exp(  ( (double)0.079 * membrane.V[ n ][ j ][ l ] )  ) )  +  ( (double)310000 * exp(  ( (double)0.35 * membrane.V[ n ][ j ][ l ] )  ) )  )  :  ( (double)1 /  ( (double)0.13 *  ( (double)1 + exp(  (  ( membrane.V[ n ][ j ][ l ] + (double)10.66 )  /  ( - (double)11.1 )  )  ) )  )  )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> fast_sodium_current_h_gate.beta_h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<piecewise>
		   <piece>
			<apply><plus/>
			<apply><times/>
		<cn> (double)3.56 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.079 </cn>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<cn> (double)310000 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.35 </cn>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><lt/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
		   <cn> (double)40 </cn>
		</apply>
		</apply>
		</piece><otherwise>
			<apply><divide/>
			<cn> (double)1 </cn>
			<apply><times/>
		<cn> (double)0.13 </cn>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><divide/>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)10.66 </cn>
		</apply>
			<apply><minus/>
		   <cn> (double)11.1 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</otherwise>
		</piecewise>
		</apply>

		 (  ( fast_sodium_current.h[  ( n + (double)1 )  ][ j ][ l ] - fast_sodium_current.h[ n ][ j ][ l ] )  / deltat )  ==  (  ( fast_sodium_current_h_gate.alpha_h[ n ][ j ][ l ] *  ( (double)1 - fast_sodium_current.h[ n ][ j ][ l ] )  )  -  ( fast_sodium_current_h_gate.beta_h[ n ][ j ][ l ] * fast_sodium_current.h[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><divide/>
			<apply><minus/>
			<apply><selector/>
			<ci> fast_sodium_current.h </ci>
			<apply><plus/>
			<ci> n </ci>
			<cn> (double)1 </cn>
		</apply>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<ci> deltat </ci>
		</apply>
			<apply><minus/>
			<apply><times/>
		<apply><selector/>
			<ci> fast_sodium_current_h_gate.alpha_h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<cn> (double)1 </cn>
			<apply><selector/>
			<ci> fast_sodium_current.h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> fast_sodium_current_h_gate.beta_h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.h </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		fast_sodium_current_j_gate.alpha_j[ n ][ j ][ l ] ==  (  ( membrane.V[ n ][ j ][ l ] <  ( - (double)40 )  )  ?  (  (  (  (  ( - (double)127140 )  * exp(  ( (double)0.2444 * membrane.V[ n ][ j ][ l ] )  ) )  -  ( (double)0.00003474 * exp(  (  ( - (double)0.04391 )  * membrane.V[ n ][ j ][ l ] )  ) )  )  *  ( membrane.V[ n ][ j ][ l ] + (double)37.78 )  )  /  ( (double)1 + exp(  ( (double)0.311 *  ( membrane.V[ n ][ j ][ l ] + (double)79.23 )  )  ) )  )  : (double)0 ) 
		<apply><eq/>
			<apply><selector/>
			<ci> fast_sodium_current_j_gate.alpha_j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<piecewise>
		   <piece>
			<apply><divide/>
			<apply><times/>
		<apply><minus/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)127140 </cn>
		</apply>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.2444 </cn>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<cn> (double)0.00003474 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.04391 </cn>
		</apply>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)37.78 </cn>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.311 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)79.23 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><lt/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
		   <cn> (double)40 </cn>
		</apply>
		</apply>
		</piece><otherwise>
			<cn> (double)0 </cn>
		</otherwise>
		</piecewise>
		</apply>

		fast_sodium_current_j_gate.beta_j[ n ][ j ][ l ] ==  (  ( membrane.V[ n ][ j ][ l ] <  ( - (double)40 )  )  ?  (  ( (double)0.1212 * exp(  (  ( - (double)0.01052 )  * membrane.V[ n ][ j ][ l ] )  ) )  /  ( (double)1 + exp(  (  ( - (double)0.1378 )  *  ( membrane.V[ n ][ j ][ l ] + (double)40.14 )  )  ) )  )  :  (  ( (double)0.3 * exp(  (  ( - (double)0.0000002535 )  * membrane.V[ n ][ j ][ l ] )  ) )  /  ( (double)1 + exp(  (  ( - (double)0.1 )  *  ( membrane.V[ n ][ j ][ l ] + (double)32 )  )  ) )  )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> fast_sodium_current_j_gate.beta_j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<piecewise>
		   <piece>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.1212 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.01052 </cn>
		</apply>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.1378 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)40.14 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><lt/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
		   <cn> (double)40 </cn>
		</apply>
		</apply>
		</piece><otherwise>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.3 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.0000002535 </cn>
		</apply>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.1 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)32 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</otherwise>
		</piecewise>
		</apply>

		 (  ( fast_sodium_current.j[  ( n + (double)1 )  ][ j ][ l ] - fast_sodium_current.j[ n ][ j ][ l ] )  / deltat )  ==  (  ( fast_sodium_current_j_gate.alpha_j[ n ][ j ][ l ] *  ( (double)1 - fast_sodium_current.j[ n ][ j ][ l ] )  )  -  ( fast_sodium_current_j_gate.beta_j[ n ][ j ][ l ] * fast_sodium_current.j[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><divide/>
			<apply><minus/>
			<apply><selector/>
			<ci> fast_sodium_current.j </ci>
			<apply><plus/>
			<ci> n </ci>
			<cn> (double)1 </cn>
		</apply>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<ci> deltat </ci>
		</apply>
			<apply><minus/>
			<apply><times/>
		<apply><selector/>
			<ci> fast_sodium_current_j_gate.alpha_j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<cn> (double)1 </cn>
			<apply><selector/>
			<ci> fast_sodium_current.j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> fast_sodium_current_j_gate.beta_j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> fast_sodium_current.j </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		slow_inward_current.E_si[ n ][ j ][ l ] ==  ( (double)7.7 -  ( (double)13.0287 * log(  ( slow_inward_current.Cai[ n ][ j ][ l ] / (double)1 )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> slow_inward_current.E_si </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<cn> (double)7.7 </cn>
			<apply><times/>
		<cn> (double)13.0287 </cn>
			<apply><ln/>
			<apply><divide/>
			<apply><selector/>
			<ci> slow_inward_current.Cai </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)1 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		membrane.i_si[ n ][ j ][ l ] ==  ( (double)0.09 * slow_inward_current.d[ n ][ j ][ l ] * slow_inward_current.f[ n ][ j ][ l ] *  ( membrane.V[ n ][ j ][ l ] - slow_inward_current.E_si[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> membrane.i_si </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<cn> (double)0.09 </cn>
			<apply><selector/>
			<ci> slow_inward_current.d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> slow_inward_current.f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> slow_inward_current.E_si </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		slow_inward_current_d_gate.alpha_d[ n ][ j ][ l ] ==  (  ( (double)0.095 * exp(  (  ( - (double)0.01 )  *  ( membrane.V[ n ][ j ][ l ] - (double)5 )  )  ) )  /  ( (double)1 + exp(  (  ( - (double)0.072 )  *  ( membrane.V[ n ][ j ][ l ] - (double)5 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> slow_inward_current_d_gate.alpha_d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.095 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.01 </cn>
		</apply>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)5 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.072 </cn>
		</apply>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)5 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		slow_inward_current_d_gate.beta_d[ n ][ j ][ l ] ==  (  ( (double)0.07 * exp(  (  ( - (double)0.017 )  *  ( membrane.V[ n ][ j ][ l ] + (double)44 )  )  ) )  /  ( (double)1 + exp(  ( (double)0.05 *  ( membrane.V[ n ][ j ][ l ] + (double)44 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> slow_inward_current_d_gate.beta_d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.07 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.017 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)44 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.05 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)44 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		 (  ( slow_inward_current.d[  ( n + (double)1 )  ][ j ][ l ] - slow_inward_current.d[ n ][ j ][ l ] )  / deltat )  ==  (  ( slow_inward_current_d_gate.alpha_d[ n ][ j ][ l ] *  ( (double)1 - slow_inward_current.d[ n ][ j ][ l ] )  )  -  ( slow_inward_current_d_gate.beta_d[ n ][ j ][ l ] * slow_inward_current.d[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><divide/>
			<apply><minus/>
			<apply><selector/>
			<ci> slow_inward_current.d </ci>
			<apply><plus/>
			<ci> n </ci>
			<cn> (double)1 </cn>
		</apply>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> slow_inward_current.d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<ci> deltat </ci>
		</apply>
			<apply><minus/>
			<apply><times/>
		<apply><selector/>
			<ci> slow_inward_current_d_gate.alpha_d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<cn> (double)1 </cn>
			<apply><selector/>
			<ci> slow_inward_current.d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> slow_inward_current_d_gate.beta_d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> slow_inward_current.d </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		slow_inward_current_f_gate.alpha_f[ n ][ j ][ l ] ==  (  ( (double)0.012 * exp(  (  ( - (double)0.008 )  *  ( membrane.V[ n ][ j ][ l ] + (double)28 )  )  ) )  /  ( (double)1 + exp(  ( (double)0.15 *  ( membrane.V[ n ][ j ][ l ] + (double)28 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> slow_inward_current_f_gate.alpha_f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.012 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.008 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)28 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.15 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)28 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		slow_inward_current_f_gate.beta_f[ n ][ j ][ l ] ==  (  ( (double)0.0065 * exp(  (  ( - (double)0.02 )  *  ( membrane.V[ n ][ j ][ l ] + (double)30 )  )  ) )  /  ( (double)1 + exp(  (  ( - (double)0.2 )  *  ( membrane.V[ n ][ j ][ l ] + (double)30 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> slow_inward_current_f_gate.beta_f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.0065 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.02 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)30 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.2 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)30 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		 (  ( slow_inward_current.f[  ( n + (double)1 )  ][ j ][ l ] - slow_inward_current.f[ n ][ j ][ l ] )  / deltat )  ==  (  ( slow_inward_current_f_gate.alpha_f[ n ][ j ][ l ] *  ( (double)1 - slow_inward_current.f[ n ][ j ][ l ] )  )  -  ( slow_inward_current_f_gate.beta_f[ n ][ j ][ l ] * slow_inward_current.f[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><divide/>
			<apply><minus/>
			<apply><selector/>
			<ci> slow_inward_current.f </ci>
			<apply><plus/>
			<ci> n </ci>
			<cn> (double)1 </cn>
		</apply>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> slow_inward_current.f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<ci> deltat </ci>
		</apply>
			<apply><minus/>
			<apply><times/>
		<apply><selector/>
			<ci> slow_inward_current_f_gate.alpha_f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<cn> (double)1 </cn>
			<apply><selector/>
			<ci> slow_inward_current.f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> slow_inward_current_f_gate.beta_f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> slow_inward_current.f </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		time_dependent_potassium_current.g_K[ n ][ j ][ l ] ==  ( (double)0.282 * sqrt(  ( time_independent_potassium_current.Ko[ n ][ j ][ l ] / (double)5.4 )  ) ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_dependent_potassium_current.g_K </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<cn> (double)0.282 </cn>
			<apply><root/>
			 <degree><ci type='integer'> 2 </ci></degree>
			 <apply><divide/>
			<apply><selector/>
			<ci> time_independent_potassium_current.Ko </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)5.4 </cn>
		</apply>
		</apply>
		</apply>
		</apply>

		time_dependent_potassium_current.E_K[ n ][ j ][ l ] ==  (  (  ( membrane.R[ n ][ j ][ l ] * membrane.T[ n ][ j ][ l ] )  / membrane.F[ n ][ j ][ l ] )  * log(  (  ( time_independent_potassium_current.Ko[ n ][ j ][ l ] +  ( time_dependent_potassium_current.PR_NaK[ n ][ j ][ l ] * time_dependent_potassium_current.Nao[ n ][ j ][ l ] )  )  /  ( time_independent_potassium_current.Ki[ n ][ j ][ l ] +  ( time_dependent_potassium_current.PR_NaK[ n ][ j ][ l ] * time_dependent_potassium_current.Nai[ n ][ j ][ l ] )  )  )  ) ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_dependent_potassium_current.E_K </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><divide/>
			<apply><times/>
		<apply><selector/>
			<ci> membrane.R </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.T </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><selector/>
			<ci> membrane.F </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><ln/>
			<apply><divide/>
			<apply><plus/>
			<apply><selector/>
			<ci> time_independent_potassium_current.Ko </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> time_dependent_potassium_current.PR_NaK </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.Nao </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> time_independent_potassium_current.Ki </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> time_dependent_potassium_current.PR_NaK </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.Nai </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		membrane.i_K[ n ][ j ][ l ] ==  ( time_dependent_potassium_current.g_K[ n ][ j ][ l ] * time_dependent_potassium_current.X[ n ][ j ][ l ] * time_dependent_potassium_current.Xi[ n ][ j ][ l ] *  ( membrane.V[ n ][ j ][ l ] - time_dependent_potassium_current.E_K[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> membrane.i_K </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> time_dependent_potassium_current.g_K </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.Xi </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.E_K </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		time_dependent_potassium_current_X_gate.alpha_X[ n ][ j ][ l ] ==  (  ( (double)0.0005 * exp(  ( (double)0.083 *  ( membrane.V[ n ][ j ][ l ] + (double)50 )  )  ) )  /  ( (double)1 + exp(  ( (double)0.057 *  ( membrane.V[ n ][ j ][ l ] + (double)50 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_dependent_potassium_current_X_gate.alpha_X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.0005 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.083 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)50 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.057 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)50 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		time_dependent_potassium_current_X_gate.beta_X[ n ][ j ][ l ] ==  (  ( (double)0.0013 * exp(  (  ( - (double)0.06 )  *  ( membrane.V[ n ][ j ][ l ] + (double)20 )  )  ) )  /  ( (double)1 + exp(  (  ( - (double)0.04 )  *  ( membrane.V[ n ][ j ][ l ] + (double)20 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_dependent_potassium_current_X_gate.beta_X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><times/>
		<cn> (double)0.0013 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.06 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)20 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.04 </cn>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)20 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		 (  ( time_dependent_potassium_current.X[  ( n + (double)1 )  ][ j ][ l ] - time_dependent_potassium_current.X[ n ][ j ][ l ] )  / deltat )  ==  (  ( time_dependent_potassium_current_X_gate.alpha_X[ n ][ j ][ l ] *  ( (double)1 - time_dependent_potassium_current.X[ n ][ j ][ l ] )  )  -  ( time_dependent_potassium_current_X_gate.beta_X[ n ][ j ][ l ] * time_dependent_potassium_current.X[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><divide/>
			<apply><minus/>
			<apply><selector/>
			<ci> time_dependent_potassium_current.X </ci>
			<apply><plus/>
			<ci> n </ci>
			<cn> (double)1 </cn>
		</apply>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<ci> deltat </ci>
		</apply>
			<apply><minus/>
			<apply><times/>
		<apply><selector/>
			<ci> time_dependent_potassium_current_X_gate.alpha_X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<cn> (double)1 </cn>
			<apply><selector/>
			<ci> time_dependent_potassium_current.X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> time_dependent_potassium_current_X_gate.beta_X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_dependent_potassium_current.X </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		time_dependent_potassium_current.Xi[ n ][ j ][ l ] ==  (  ( membrane.V[ n ][ j ][ l ] >  ( - (double)100 )  )  ?  (  ( (double)2.837 *  ( exp(  ( (double)0.04 *  ( membrane.V[ n ][ j ][ l ] + (double)77 )  )  ) - (double)1 )  )  /  (  ( membrane.V[ n ][ j ][ l ] + (double)77 )  * exp(  ( (double)0.04 *  ( membrane.V[ n ][ j ][ l ] + (double)35 )  )  ) )  )  : (double)1 ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_dependent_potassium_current.Xi </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<piecewise>
		   <piece>
			<apply><divide/>
			<apply><times/>
		<cn> (double)2.837 </cn>
			<apply><minus/>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.04 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)77 </cn>
		</apply>
		</apply>
		</apply>
			<cn> (double)1 </cn>
		</apply>
		</apply>
			<apply><times/>
		<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)77 </cn>
		</apply>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.04 </cn>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)35 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><gt/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
		   <cn> (double)100 </cn>
		</apply>
		</apply>
		</piece><otherwise>
			<cn> (double)1 </cn>
		</otherwise>
		</piecewise>
		</apply>

		time_independent_potassium_current.g_K1[ n ][ j ][ l ] ==  ( (double)0.6047 * sqrt(  ( time_independent_potassium_current.Ko[ n ][ j ][ l ] / (double)5.4 )  ) ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_independent_potassium_current.g_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<cn> (double)0.6047 </cn>
			<apply><root/>
			 <degree><ci type='integer'> 2 </ci></degree>
			 <apply><divide/>
			<apply><selector/>
			<ci> time_independent_potassium_current.Ko </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)5.4 </cn>
		</apply>
		</apply>
		</apply>
		</apply>

		time_independent_potassium_current.E_K1[ n ][ j ][ l ] ==  (  (  ( membrane.R[ n ][ j ][ l ] * membrane.T[ n ][ j ][ l ] )  / membrane.F[ n ][ j ][ l ] )  * log(  ( time_independent_potassium_current.Ko[ n ][ j ][ l ] / time_independent_potassium_current.Ki[ n ][ j ][ l ] )  ) ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_independent_potassium_current.E_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><divide/>
			<apply><times/>
		<apply><selector/>
			<ci> membrane.R </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> membrane.T </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><selector/>
			<ci> membrane.F </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><ln/>
			<apply><divide/>
			<apply><selector/>
			<ci> time_independent_potassium_current.Ko </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_independent_potassium_current.Ki </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		membrane.i_K1[ n ][ j ][ l ] ==  ( time_independent_potassium_current.g_K1[ n ][ j ][ l ] * time_independent_potassium_current.K1_infinity *  ( membrane.V[ n ][ j ][ l ] - time_independent_potassium_current.E_K1[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> membrane.i_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> time_independent_potassium_current.g_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<ci> time_independent_potassium_current.K1_infinity </ci>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_independent_potassium_current.E_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		time_independent_potassium_current_K1_gate.alpha_K1[ n ][ j ][ l ] ==  ( (double)1.02 /  ( (double)1 + exp(  ( (double)0.2385 *  (  ( membrane.V[ n ][ j ][ l ] - time_independent_potassium_current.E_K1[ n ][ j ][ l ] )  - (double)59.215 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_independent_potassium_current_K1_gate.alpha_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<cn> (double)1.02 </cn>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.2385 </cn>
			<apply><minus/>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_independent_potassium_current.E_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<cn> (double)59.215 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		time_independent_potassium_current_K1_gate.beta_K1[ n ][ j ][ l ] ==  (  (  ( (double)0.49124 * exp(  ( (double)0.08032 *  (  ( membrane.V[ n ][ j ][ l ] + (double)5.476 )  - time_independent_potassium_current.E_K1[ n ][ j ][ l ] )  )  ) )  +  ( (double)1 * exp(  ( (double)0.06175 *  ( membrane.V[ n ][ j ][ l ] -  ( time_independent_potassium_current.E_K1[ n ][ j ][ l ] + (double)594.31 )  )  )  ) )  )  /  ( (double)1 + exp(  (  ( - (double)0.5143 )  *  (  ( membrane.V[ n ][ j ][ l ] - time_independent_potassium_current.E_K1[ n ][ j ][ l ] )  + (double)4.753 )  )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> time_independent_potassium_current_K1_gate.beta_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<apply><plus/>
			<apply><times/>
		<cn> (double)0.49124 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.08032 </cn>
			<apply><minus/>
			<apply><plus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)5.476 </cn>
		</apply>
			<apply><selector/>
			<ci> time_independent_potassium_current.E_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><times/>
		<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<cn> (double)0.06175 </cn>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> time_independent_potassium_current.E_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<cn> (double)594.31 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><times/>
		<apply><minus/>
		   <cn> (double)0.5143 </cn>
		</apply>
			<apply><plus/>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_independent_potassium_current.E_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<cn> (double)4.753 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		time_independent_potassium_current.K1_infinity ==  ( time_independent_potassium_current_K1_gate.alpha_K1[ n ][ j ][ l ] /  ( time_independent_potassium_current_K1_gate.alpha_K1[ n ][ j ][ l ] + time_independent_potassium_current_K1_gate.beta_K1[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<ci> time_independent_potassium_current.K1_infinity </ci>
			<apply><divide/>
			<apply><selector/>
			<ci> time_independent_potassium_current_K1_gate.alpha_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><plus/>
			<apply><selector/>
			<ci> time_independent_potassium_current_K1_gate.alpha_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_independent_potassium_current_K1_gate.beta_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		plateau_potassium_current.E_Kp[ n ][ j ][ l ] == time_independent_potassium_current.E_K1[ n ][ j ][ l ]
		<apply><eq/>
			<apply><selector/>
			<ci> plateau_potassium_current.E_Kp </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> time_independent_potassium_current.E_K1 </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>

		plateau_potassium_current.Kp[ n ][ j ][ l ] ==  ( (double)1 /  ( (double)1 + exp(  (  ( (double)7.488 - membrane.V[ n ][ j ][ l ] )  / (double)5.98 )  ) )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> plateau_potassium_current.Kp </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><divide/>
			<cn> (double)1 </cn>
			<apply><plus/>
			<cn> (double)1 </cn>
			<apply><exp/>
			<apply><divide/>
			<apply><minus/>
			<cn> (double)7.488 </cn>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<cn> (double)5.98 </cn>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>

		membrane.i_Kp[ n ][ j ][ l ] ==  ( plateau_potassium_current.g_Kp[ n ][ j ][ l ] * plateau_potassium_current.Kp[ n ][ j ][ l ] *  ( membrane.V[ n ][ j ][ l ] - plateau_potassium_current.E_Kp[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> membrane.i_Kp </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> plateau_potassium_current.g_Kp </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> plateau_potassium_current.Kp </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> plateau_potassium_current.E_Kp </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		membrane.i_b[ n ][ j ][ l ] ==  ( background_current.g_b[ n ][ j ][ l ] *  ( membrane.V[ n ][ j ][ l ] - background_current.E_b[ n ][ j ][ l ] )  ) 
		<apply><eq/>
			<apply><selector/>
			<ci> membrane.i_b </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><times/>
		<apply><selector/>
			<ci> background_current.g_b </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><minus/>
			<apply><selector/>
			<ci> membrane.V </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> background_current.E_b </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>

		 (  ( slow_inward_current.Cai[  ( n + (double)1 )  ][ j ][ l ] - slow_inward_current.Cai[ n ][ j ][ l ] )  / deltat )  ==  (  (  (  ( - (double)0.0001 )  / (double)1 )  * membrane.i_si[ n ][ j ][ l ] )  +  ( (double)0.07 *  ( (double)0.0001 - slow_inward_current.Cai[ n ][ j ][ l ] )  )  ) 
		<apply><eq/>
			<apply><divide/>
			<apply><minus/>
			<apply><selector/>
			<ci> slow_inward_current.Cai </ci>
			<apply><plus/>
			<ci> n </ci>
			<cn> (double)1 </cn>
		</apply>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
			<apply><selector/>
			<ci> slow_inward_current.Cai </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<ci> deltat </ci>
		</apply>
			<apply><plus/>
			<apply><times/>
		<apply><divide/>
			<apply><minus/>
		   <cn> (double)0.0001 </cn>
		</apply>
			<cn> (double)1 </cn>
		</apply>
			<apply><selector/>
			<ci> membrane.i_si </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
			<apply><times/>
		<cn> (double)0.07 </cn>
			<apply><minus/>
			<cn> (double)0.0001 </cn>
			<apply><selector/>
			<ci> slow_inward_current.Cai </ci>
			<ci> n </ci>
			<ci> j </ci>
			<ci> l </ci>
		</apply>
		</apply>
		</apply>
		</apply>
		</apply>