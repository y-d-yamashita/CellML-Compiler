#include<stdio.h>
#include<math.h>
#include<cutil.h>
#include<cuda.h>
#define __DATA_NUM 32
#define __DATA_NUMX 32
#define __DATA_NUMY 1
#define __THREADS_X 256
#define __THREADS_Y 1
#define __THREADS_Z 1
#define __BLOCKS_X ( __DATA_NUM /  ( __THREADS_X * __THREADS_Y * __THREADS_Z ) ) 
#define __BLOCKS_Y 1


int main ( int argc , char** argv ) ;
__global__ void __init_kernel ( double* xi ) ;
__global__ void __calc_kernel ( double* xi , double* xo , double* x1 , double* x2 , double* x3 , double* x4 , double* x5 , double* k1 , double* k2 , double* k3 , double* k4 , double* y1 , double* y2 , double* y3 , double* y4 , double* z , double t , double d , double R ) ;

int main ( int argc , char** argv ) {

	double* __host_xi;
	double* __dev_xi;
	double* __host_xo;
	double* __dev_xo;
	double* __host_x1;
	double* __dev_x1;
	double* __host_x2;
	double* __dev_x2;
	double* __host_x3;
	double* __dev_x3;
	double* __host_x4;
	double* __dev_x4;
	double* __host_x5;
	double* __dev_x5;
	double* __host_k1;
	double* __dev_k1;
	double* __host_k2;
	double* __dev_k2;
	double* __host_k3;
	double* __dev_k3;
	double* __host_k4;
	double* __dev_k4;
	double* __host_y1;
	double* __dev_y1;
	double* __host_y2;
	double* __dev_y2;
	double* __host_y3;
	double* __dev_y3;
	double* __host_y4;
	double* __dev_y4;
	double* __host_z;
	double* __dev_z;
	double t;
	double d = 0.010000;
	dim3 __block ( __THREADS_X , __THREADS_Y , __THREADS_Z ) ;
	dim3 __grid ( __BLOCKS_X , __BLOCKS_Y ) ;

	CUT_DEVICE_INIT ( argc , argv ) ; 
	__host_xi = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_xo = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_x1 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_x2 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_x3 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_x4 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_x5 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_k1 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_k2 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_k3 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_k4 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; ;
	__host_y1 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; ;
	__host_y2 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; ;
	__host_y3 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; ;
	__host_y4 = (double*)malloc (  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; ;
	__host_z = (double*)malloc (  ( sizeof( double ) * 92 )  ) ; ;
	memset ( __host_xi , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_xo , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_x1 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_x2 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_x3 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_x4 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_x5 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_k1 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_k2 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_k3 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_k4 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	memset ( __host_y1 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	memset ( __host_y2 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	memset ( __host_y3 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	memset ( __host_y4 , 0 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	memset ( __host_z , 0 ,  ( sizeof( double ) * 92 )  ) ; 
	cudaMalloc ( ( void** ) &__dev_xi ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_xo ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_x1 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_x2 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_x3 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_x4 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_x5 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_k1 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_k2 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_k3 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_k4 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_y1 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_y2 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_y3 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_y4 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  ) ; 
	cudaMalloc ( ( void** ) &__dev_z ,  ( sizeof( double ) * 92 )  ) ; 
	cudaMemcpy ( __dev_xi , __host_xi ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_xo , __host_xo ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_x1 , __host_x1 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_x2 , __host_x2 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_x3 , __host_x3 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_x4 , __host_x4 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_x5 , __host_x5 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_k1 , __host_k1 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_k2 , __host_k2 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_k3 , __host_k3 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_k4 , __host_k4 ,  ( sizeof( double ) *  ( __DATA_NUM * 37 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_y1 , __host_y1 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_y2 , __host_y2 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_y3 , __host_y3 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_y4 , __host_y4 ,  ( sizeof( double ) *  ( __DATA_NUM * 151 )  )  , cudaMemcpyHostToDevice ) ; 
	cudaMemcpy ( __dev_z , __host_z ,  ( sizeof( double ) * 92 )  , cudaMemcpyHostToDevice ) ; 
	__init_kernel <<< __grid , __block >>>  ( __dev_xi ) ; 
	for(t = 0.000000; ( t <= 400.000000 ) ;t =  ( t + d ) ){

		for(ix = 0; ( ix < __DATA_NUMX ) ;ix++){

			for(iy = 0; ( iy < __DATA_NUMY ) ;iy++){

				__calc_kernel <<< __grid , __block >>>  ( __dev_xi , __dev_xo , __dev_x1 , __dev_x2 , __dev_x3 , __dev_x4 , __dev_x5 , __dev_k1 , __dev_k2 , __dev_k3 , __dev_k4 , __dev_y1 , __dev_y2 , __dev_y3 , __dev_y4 , __dev_z , t , d ) ; 

			}


		}


	}

	free ( __host_xi ) ; 
	free ( __host_xo ) ; 
	free ( __host_x1 ) ; 
	free ( __host_x2 ) ; 
	free ( __host_x3 ) ; 
	free ( __host_x4 ) ; 
	free ( __host_x5 ) ; 
	free ( __host_k1 ) ; 
	free ( __host_k2 ) ; 
	free ( __host_k3 ) ; 
	free ( __host_k4 ) ; 
	free ( __host_y1 ) ; 
	free ( __host_y2 ) ; 
	free ( __host_y3 ) ; 
	free ( __host_y4 ) ; 
	free ( __host_z ) ; 
	cudaFree ( __dev_xi ) ; 
	cudaFree ( __dev_xo ) ; 
	cudaFree ( __dev_x1 ) ; 
	cudaFree ( __dev_x2 ) ; 
	cudaFree ( __dev_x3 ) ; 
	cudaFree ( __dev_x4 ) ; 
	cudaFree ( __dev_x5 ) ; 
	cudaFree ( __dev_k1 ) ; 
	cudaFree ( __dev_k2 ) ; 
	cudaFree ( __dev_k3 ) ; 
	cudaFree ( __dev_k4 ) ; 
	cudaFree ( __dev_y1 ) ; 
	cudaFree ( __dev_y2 ) ; 
	cudaFree ( __dev_y3 ) ; 
	cudaFree ( __dev_y4 ) ; 
	cudaFree ( __dev_z ) ; 
	CUT_EXIT ( argc , argv ) ; 
}


__global__ void __init_kernel ( double* xi ) {

	const unsigned int __tmp_idx_x =  ( threadIdx.x +  ( blockDim.x * blockIdx.x )  ) ;
	const unsigned int __tmp_idx_y =  ( threadIdx.y +  ( blockDim.y * blockIdx.y )  ) ;
	const unsigned int __tmp_size_x =  ( blockDim.x * gridDim.x ) ;
	const unsigned int __tid =  ( __tmp_idx_x +  ( __tmp_idx_y * __tmp_size_x )  ) ;

}


__global__ void __calc_kernel ( double* xi , double* xo , double* x1 , double* x2 , double* x3 , double* x4 , double* x5 , double* k1 , double* k2 , double* k3 , double* k4 , double* y1 , double* y2 , double* y3 , double* y4 , double* z , double t , double d , double R ) {

	const unsigned int __tmp_idx_x =  ( threadIdx.x +  ( blockDim.x * blockIdx.x )  ) ;
	const unsigned int __tmp_idx_y =  ( threadIdx.y +  ( blockDim.y * blockIdx.y )  ) ;
	const unsigned int __tmp_size_x =  ( blockDim.x * gridDim.x ) ;
	const unsigned int __tid =  ( __tmp_idx_x +  ( __tmp_idx_y * __tmp_size_x )  ) ;
	double ym;

	ym = (__tmp_idx_y!=0)?(xi[ (0 * __DATA_NUM) + (__tmp_idx_x + ( (__tmp_idx_y - 1)  *  __tmp_size_x) ) ] - xi[ (0 * __DATA_NUM) + __tid ])/R:(double)0.0;
	x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 0 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 1 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 2 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 3 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 3 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 4 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 5 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 6 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 7 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 8 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 9 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 10 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 11 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 12 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 13 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 14 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 15 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 16 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 17 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 18 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 19 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 20 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 21 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 22 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 23 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 24 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 25 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 26 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 27 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 28 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 29 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 30 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 31 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 31 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 32 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 33 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 34 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 35 * __DATA_NUM )  + __tid ) ];
	x1[ (  ( 36 * __DATA_NUM )  + __tid ) ] = xi[ (  ( 36 * __DATA_NUM )  + __tid ) ];
	y1[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  (  ( t >= z[4] )  &&  ( t <= z[5] )  &&  (  (  ( t - z[4] )  -  ( floor(  (  ( t - z[4] )  / z[6] )  ) * z[6] )  )  <= z[7] )  )  ? z[8] : (double)0 ) ;
	y1[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( z[13] - x1[ (  ( 3 * __DATA_NUM )  + __tid ) ] )  + z[14] ) ;
	y1[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[9] )  :  (  (  (  ( z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] -  ( z[9] * exp( (  (  ( - z[2] )  * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ? x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] :  (  (  (  ( z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] -  ( z[11] * exp( (  (  ( - z[2] )  * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y1[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( z[17] * y1[ (  ( 2 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)26 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)0.02 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y1[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1300 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)0.04 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y1[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)9000000000 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)5 )  ) )  +  ( (double)8000 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y1[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] + x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] )  * x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  /  ( (double)1 + pow( ( (double)1.4 / x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y1[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.27 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.9 )  ) )  +  ( (double)1.5 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y1[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0018 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)7.4 )  ) )  +  ( (double)2 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y1[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)250000 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)9 )  ) )  +  ( (double)58 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y1[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.019 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.6 )  ) )  +  ( (double)0.82 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)250 )  ) )  )  ) ;
	y1[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)62000 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10.1 )  ) )  +  ( (double)30 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)3000 )  ) )  )  ) ;
	y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  (  ( z[0] * z[1] )  / z[2] )  * log(  ( z[11] / x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  ) ) ;
	y1[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.75 * exp( ( (double)0.035 *  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) )  /  ( (double)1 + exp( ( (double)0.015 *  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)140 )  )  ) )  ) ;
	y1[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)8000 * exp( (  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)8.5 )  ) )  +  ( (double)7 * exp( (  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)300 )  ) )  )  ) ;
	y1[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( z[31] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.2 ) ) ;
	y1[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)160 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)200 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)2500 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y1[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)1600 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)2000 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)10000 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y1[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.35 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)17 )  ) )  +  ( (double)2 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)150 )  ) )  )  ) ;
	y1[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( z[32] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y1[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)85 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)10.5 )  ) )  +  ( (double)370 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)62 )  ) )  )  ) ;
	y1[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( z[35] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)11 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)28 )  ) )  +  ( (double)0.2 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y1[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( -  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.051335 * exp( (  ( -  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  )  ) ;
	y1[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( (double)0.4 * z[37] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( (double)0.00011 * pow( ( z[11] / (double)5.4 )  , (double)0.16 ) ) ;
	y1[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( z[39] * z[40] * pow( ( z[11] / (double)1 )  , (double)0.24 ) ) ;
	y1[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[45] / z[9] )  , (double)3 ) *  ( (double)1 +  ( z[10] / z[47] )  )  )  )  ) ;
	y1[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[47] / z[10] )  *  ( (double)1 + pow( ( z[9] / z[45] )  , (double)3 ) )  )  )  ) ;
	y1[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  (  ( z[49] - (double)1 )  * z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y1[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[53] / x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] / z[55] )  , (double)1.12 ) )  )  )  ) ;
	y1[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[55] / x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  , (double)1.12 ) *  ( (double)1 + pow( ( x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[53] )  , (double)1.06 ) )  )  )  ) ;
	y1[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( (double)0.37 /  ( (double)1 +  ( z[57] / x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y1[ (  ( 37 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  +  ( z[51] * y1[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 38 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[62] / x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y1[ (  ( 39 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y1[ (  ( 38 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 40 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[64] / x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y1[ (  ( 41 * __DATA_NUM )  + __tid ) ] =  (  ( z[59] * y1[ (  ( 38 * __DATA_NUM )  + __tid ) ] )  +  ( z[60] * y1[ (  ( 39 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 42 * __DATA_NUM )  + __tid ) ] =  (  ( z[73] - x1[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  + z[74] ) ;
	y1[ (  ( 43 * __DATA_NUM )  + __tid ) ] =  ( z[85] - x1[ (  ( 36 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 44 * __DATA_NUM )  + __tid ) ] = exp( (  ( - (double)20 )  * pow( ( z[85] - z[84] )  , (double)2 ) )  );
	y1[ (  ( 45 * __DATA_NUM )  + __tid ) ] =  ( z[79] * x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 46 * __DATA_NUM )  + __tid ) ] =  (  ( - (double)0.4 )  * x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] * z[75] ) ;
	y1[ (  ( 47 * __DATA_NUM )  + __tid ) ] =  (  ( z[86] * pow( ( z[87] - z[85] )  , (double)5 ) )  +  ( z[88] *  ( z[87] - z[85] )  )  ) ;
	y1[ (  ( 48 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y1[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	y1[ (  ( 49 * __DATA_NUM )  + __tid ) ] =  ( z[14] * x1[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 50 * __DATA_NUM )  + __tid ) ] =  ( (double)0.1 * z[17] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 51 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)0.8 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  ) ;
	y1[ (  ( 52 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.014 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5 )  ) )  +  ( (double)4000 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y1[ (  ( 53 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0000185 * z[19] * y1[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 54 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 55 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)2200000 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7.4 )  ) )  +  ( (double)11 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y1[ (  ( 56 * __DATA_NUM )  + __tid ) ] =  (  ( z[27] * z[24] * z[26] * z[23] )  /  ( z[25] * z[28] * z[22] )  ) ;
	y1[ (  ( 57 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)40 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)6.3 )  ) )  +  ( (double)1.5 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10000 )  ) )  )  ) ;
	y1[ (  ( 58 * __DATA_NUM )  + __tid ) ] =  ( z[30] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.4 ) ) ;
	y1[ (  ( 59 * __DATA_NUM )  + __tid ) ] =  (  ( (double)3 * exp( (  ( - (double)0.048 )  *  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) *  ( (double)1 + exp( ( (double)0.064 *  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)38 )  )  ) )  )  /  ( (double)1 + exp( ( (double)0.03 *  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)70 )  )  ) )  ) ;
	y1[ (  ( 60 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 19 * __DATA_NUM )  + __tid ) ] *  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  (  ( (double)0.6 * x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  +  ( (double)0.4 * x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  * x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 61 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)200 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)13 )  ) )  +  ( (double)20 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y1[ (  ( 62 * __DATA_NUM )  + __tid ) ] =  ( z[33] * y1[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y1[ (  ( 63 * __DATA_NUM )  + __tid ) ] =  ( z[36] * y1[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 64 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.067083 * exp( (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  )  ) ;
	y1[ (  ( 65 * __DATA_NUM )  + __tid ) ] =  ( z[37] * y1[ (  ( 2 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 66 * __DATA_NUM )  + __tid ) ] =  ( (double)0.8 /  ( (double)1 + pow( ( x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] / (double)0.1 )  , (double)2 ) )  ) ;
	y1[ (  ( 67 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  ( z[49] * z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y1[ (  ( 68 * __DATA_NUM )  + __tid ) ] =  ( z[9] * exp( (  (  ( - (double)0.82 )  * z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y1[ (  ( 69 * __DATA_NUM )  + __tid ) ] =  ( z[74] * x1[ (  ( 31 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 70 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  - x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 71 * __DATA_NUM )  + __tid ) ] =  (  ( z[77] * x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 44 * __DATA_NUM )  + __tid ) ] )  -  ( z[82] * x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 72 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y1[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 73 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  ( x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] + x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y1[ (  ( 1 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y1[ (  ( 49 * __DATA_NUM )  + __tid ) ] )  )  ) - y1[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y1[ (  ( 75 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[10] )  :  (  (  (  ( (double)2 * z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( z[10] * exp( (  (  ( - (double)2 )  * z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - (double)2 )  * z[2] * x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y1[ (  ( 76 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.1027 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)0.25 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)50 )  ) )  )  ) ;
	y1[ (  ( 77 * __DATA_NUM )  + __tid ) ] =  ( z[19] * y1[ (  ( 75 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 78 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)480 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7 )  ) )  +  ( (double)2.2 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y1[ (  ( 79 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0676 * y1[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 80 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( (double)0.3 * y1[ (  ( 79 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 81 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1800 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)14 )  ) )  +  ( (double)66 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y1[ (  ( 82 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0006 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)6.7 )  ) )  +  ( (double)1.2 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)25 )  ) )  )  ) ;
	y1[ (  ( 83 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 17 * __DATA_NUM )  + __tid ) ] /  ( y1[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 84 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)20 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)11.5 )  ) )  +  ( (double)5 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y1[ (  ( 85 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 23 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 86 * __DATA_NUM )  + __tid ) ] =  ( (double)3.7 * y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 87 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)4.4 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)16 )  ) )  +  ( (double)0.2 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)500 )  ) )  )  ) ;
	y1[ (  ( 88 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] ==  ( - (double)3 )  ?  ( y1[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] * (double)13.0077 )  :  (  ( y1[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] *  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  /  ( (double)1 - exp( (  ( -  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  / (double)13 )  ) )  )  ) ;
	y1[ (  ( 89 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 + pow( ( (double)0.0012 / y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y1[ (  ( 90 * __DATA_NUM )  + __tid ) ] =  ( z[41] * y1[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 91 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[44] / x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) *  ( (double)1 +  ( y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] / z[46] )  )  )  )  ) ;
	y1[ (  ( 92 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  +  ( z[43] * y1[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 93 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[54] / y1[ (  ( 68 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( z[11] / z[56] )  , (double)1.12 ) )  )  )  ) ;
	y1[ (  ( 94 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[63] / y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y1[ (  ( 95 * __DATA_NUM )  + __tid ) ] =  ( z[70] *  ( x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 96 * __DATA_NUM )  + __tid ) ] =  (  ( z[76] * y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 70 * __DATA_NUM )  + __tid ) ] )  -  ( z[81] * x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 97 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y1[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 98 * __DATA_NUM )  + __tid ) ] =  ( z[89] * y1[ (  ( 73 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 99 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 50 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 100 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000365 * z[19] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 101 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 79 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 102 * __DATA_NUM )  + __tid ) ] =  ( z[29] * y1[ (  ( 75 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 103 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 59 * __DATA_NUM )  + __tid ) ] /  ( y1[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 104 * __DATA_NUM )  + __tid ) ] =  (  ( (double)8 / (double)3 )  * pow(y1[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)3 ) * y1[ (  ( 83 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 105 * __DATA_NUM )  + __tid ) ] =  (  ( pow(y1[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 ) * (double)1 )  /  (  ( (double)0.00014 * exp( (  ( -  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)9.1 )  ) )  +  ( (double)0.2 * exp( (  ( -  (  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)500 )  ) )  )  ) ;
	y1[ (  ( 106 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1450 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)260 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y1[ (  ( 107 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 65 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 108 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y1[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 109 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 30 * __DATA_NUM )  + __tid ) ] *  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  * y1[ (  ( 66 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 110 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[46] / y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  *  ( (double)1 + pow( ( x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[44] )  , (double)3 ) )  )  )  ) ;
	y1[ (  ( 111 * __DATA_NUM )  + __tid ) ] =  ( z[58] * z[3] * (double)1 *  (  ( y1[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 34 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  -  ( z[50] * y1[ (  ( 93 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y1[ (  ( 112 * __DATA_NUM )  + __tid ) ] =  ( z[65] * (double)1 *  (  ( z[59] * y1[ (  ( 38 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  -  ( y1[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 94 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y1[ (  ( 113 * __DATA_NUM )  + __tid ) ] =  (  ( (double)280000 * pow( ( y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) )  +  ( z[68] * y1[ (  ( 101 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 114 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y1[ (  ( 42 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y1[ (  ( 69 * __DATA_NUM )  + __tid ) ] )  )  ) - y1[ (  ( 42 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y1[ (  ( 115 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 98 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 43 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 116 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0001027 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)5 * exp( (  ( - x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y1[ (  ( 117 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 100 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 118 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 119 * __DATA_NUM )  + __tid ) ] =  ( z[28] * y1[ (  ( 118 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 120 * __DATA_NUM )  + __tid ) ] =  ( (double)2 * pow(y1[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)2 ) * pow(y1[ (  ( 83 * __DATA_NUM )  + __tid ) ] , (double)2 ) ) ;
	y1[ (  ( 121 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)10 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)2.5 * exp( ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)300 )  ) )  )  ) ;
	y1[ (  ( 122 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y1[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 123 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 91 * __DATA_NUM )  + __tid ) ] )  +  ( z[42] * y1[ (  ( 110 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 124 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y1[ (  ( 94 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 125 * __DATA_NUM )  + __tid ) ] =  ( z[66] *  ( y1[ (  ( 114 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  * x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 126 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000377 * pow( ( y1[ (  ( 114 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) ) ;
	y1[ (  ( 127 * __DATA_NUM )  + __tid ) ] =  (  ( z[78] * x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  -  ( z[83] * x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 128 * __DATA_NUM )  + __tid ) ] =  (  ( - y1[ (  ( 47 * __DATA_NUM )  + __tid ) ] )  + y1[ (  ( 115 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 129 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 /  ( (double)1 +  (  ( z[18] * y1[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  /  ( y1[ (  ( 51 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 76 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 7 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y1[ (  ( 130 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 /  ( (double)1 +  (  ( z[21] * y1[ (  ( 78 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  /  ( z[20] * y1[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 55 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y1[ (  ( 131 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 118 * __DATA_NUM )  + __tid ) ] +  ( y1[ (  ( 74 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y1[ (  ( 132 * __DATA_NUM )  + __tid ) ] = pow(y1[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 );
	y1[ (  ( 133 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 122 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 134 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[56] / z[11] )  , (double)1.12 ) *  ( (double)1 + pow( ( y1[ (  ( 68 * __DATA_NUM )  + __tid ) ] / z[54] )  , (double)1.06 ) )  )  )  ) ;
	y1[ (  ( 135 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 94 * __DATA_NUM )  + __tid ) ] )  +  ( z[61] * y1[ (  ( 124 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 136 * __DATA_NUM )  + __tid ) ] =  ( z[69] *  ( x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 137 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 107 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 90 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 88 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 133 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 109 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 138 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 - y1[ (  ( 129 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 139 * __DATA_NUM )  + __tid ) ] =  ( z[26] * y1[ (  ( 131 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 140 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 141 * __DATA_NUM )  + __tid ) ] =  (  ( z[50] * y1[ (  ( 93 * __DATA_NUM )  + __tid ) ] )  +  ( z[52] * y1[ (  ( 134 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 142 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  (  ( y1[ (  ( 97 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y1[ (  ( 96 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 143 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 - y1[ (  ( 130 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 144 * __DATA_NUM )  + __tid ) ] =  ( z[48] * z[3] * (double)1 *  (  ( y1[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 91 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  -  ( y1[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 31 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y1[ (  ( 145 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 65 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 122 * __DATA_NUM )  + __tid ) ] +  ( (double)3 * y1[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  +  ( (double)3 * y1[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 146 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 90 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y1[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y1[ (  ( 147 * __DATA_NUM )  + __tid ) ] =  ( (double)0.08 /  ( (double)1 +  ( (double)0.36 / y1[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y1[ (  ( 148 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 58 * __DATA_NUM )  + __tid ) ] *  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  ( y1[ (  ( 132 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 104 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 120 * __DATA_NUM )  + __tid ) ] )  * x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 149 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 99 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 117 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 85 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 140 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 137 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 111 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 144 * __DATA_NUM )  + __tid ) ] ) ;
	y1[ (  ( 150 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 25 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 109 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 23 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 50 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 100 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 88 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y1[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y1[ (  ( 149 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  / z[3] ) ;
	k1[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( - y1[ (  ( 145 * __DATA_NUM )  + __tid ) ] )  /  ( z[2] * z[12] )  ) ;
	k1[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y1[ (  ( 150 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  /  ( z[2] * z[12] )  ) ;
	k1[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  (  (  ( -  (  (  ( y1[ (  ( 146 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y1[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  - y1[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  )  /  ( (double)2 * z[2] * z[12] )  )  + y1[ (  ( 142 * __DATA_NUM )  + __tid ) ] ) ;
	k1[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( z[15] *  ( z[16] - x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  + y1[ (  ( 46 * __DATA_NUM )  + __tid ) ] )  -  ( y1[ (  ( 111 * __DATA_NUM )  + __tid ) ] /  ( z[2] * z[12] )  )  )  +  ( y1[ (  ( 112 * __DATA_NUM )  + __tid ) ] /  ( (double)4 * z[2] * z[12] )  )  ) ;
	k1[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  +  ( y1[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 138 * __DATA_NUM )  + __tid ) ] )  )  -  ( x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] *  ( y1[ (  ( 129 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k1[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  (  (  ( x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  +  ( x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] * z[18] )  )  -  ( x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] *  ( y1[ (  ( 6 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k1[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  (  (  ( y1[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  +  ( x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  -  ( x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] *  ( y1[ (  ( 7 * __DATA_NUM )  + __tid ) ] + z[18] )  )  ) ;
	k1[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 8 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 52 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  (  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 78 * __DATA_NUM )  + __tid ) ] )  +  ( y1[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 143 * __DATA_NUM )  + __tid ) ] )  )  -  ( x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] *  ( y1[ (  ( 130 * __DATA_NUM )  + __tid ) ] + y1[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k1[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  (  (  ( x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  +  ( x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] * z[21] )  )  -  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( y1[ (  ( 78 * __DATA_NUM )  + __tid ) ] + z[20] )  )  ) ;
	k1[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  (  (  ( y1[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  +  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] * z[20] )  )  -  ( x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] *  ( y1[ (  ( 55 * __DATA_NUM )  + __tid ) ] + z[21] )  )  ) ;
	k1[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] * z[24] )  +  ( x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  -  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] *  ( y1[ (  ( 139 * __DATA_NUM )  + __tid ) ] + z[25] )  )  ) ;
	k1[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  (  (  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 139 * __DATA_NUM )  + __tid ) ] )  +  ( y1[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[22] )  )  -  ( x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( z[23] + y1[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k1[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  (  (  ( y1[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[27] )  +  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[25] )  )  -  ( x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( z[24] +  ( z[28] * y1[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	k1[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 81 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 57 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 15 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 82 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 18 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 105 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 84 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 20 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 61 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 21 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 121 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 22 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 24 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 106 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 86 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  )  -  ( z[34] * x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 26 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 87 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 27 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 64 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 92 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 123 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 141 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 37 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 135 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  -  ( y1[ (  ( 41 * __DATA_NUM )  + __tid ) ] * x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  (  ( x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 113 * __DATA_NUM )  + __tid ) ] )  -  ( x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y1[ (  ( 147 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 126 * __DATA_NUM )  + __tid ) ] *  ( (double)1 -  ( x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] + x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  )  )  -  (  ( y1[ (  ( 113 * __DATA_NUM )  + __tid ) ] + z[67] )  * x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  ) ;
	k1[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 136 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[71] )  ) ;
	k1[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( - y1[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y1[ (  ( 136 * __DATA_NUM )  + __tid ) ] )  - y1[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[72] )  ) ;
	k1[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( y1[ (  ( 96 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 71 * __DATA_NUM )  + __tid ) ] ) ;
	k1[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 71 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y1[ (  ( 97 * __DATA_NUM )  + __tid ) ] ) ;
	k1[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  (  ( y1[ (  ( 127 * __DATA_NUM )  + __tid ) ] - y1[ (  ( 45 * __DATA_NUM )  + __tid ) ] )  - y1[ (  ( 72 * __DATA_NUM )  + __tid ) ] ) ;
	k1[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y1[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 0 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 1 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 2 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 3 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 3 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 4 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 5 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 6 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 7 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 8 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 9 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 11 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 12 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 15 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 16 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 17 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 18 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 19 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 20 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 21 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 22 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 23 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 24 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 25 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 26 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 27 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 28 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 29 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 30 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 31 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 31 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 32 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 33 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 34 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 35 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x2[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 36 * __DATA_NUM )  + __tid ) ] +  ( k1[ (  ( 36 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	y2[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  (  ( t >= z[4] )  &&  ( t <= z[5] )  &&  (  (  ( t - z[4] )  -  ( floor(  (  ( t - z[4] )  / z[6] )  ) * z[6] )  )  <= z[7] )  )  ? z[8] : (double)0 ) ;
	y2[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( z[13] - x2[ (  ( 3 * __DATA_NUM )  + __tid ) ] )  + z[14] ) ;
	y2[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[9] )  :  (  (  (  ( z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x2[ (  ( 1 * __DATA_NUM )  + __tid ) ] -  ( z[9] * exp( (  (  ( - z[2] )  * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ? x2[ (  ( 2 * __DATA_NUM )  + __tid ) ] :  (  (  (  ( z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x2[ (  ( 2 * __DATA_NUM )  + __tid ) ] -  ( z[11] * exp( (  (  ( - z[2] )  * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y2[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( z[17] * y2[ (  ( 2 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x2[ (  ( 5 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 7 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)26 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)0.02 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y2[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1300 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)0.04 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y2[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)9000000000 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)5 )  ) )  +  ( (double)8000 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y2[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  ( x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( x2[ (  ( 12 * __DATA_NUM )  + __tid ) ] + x2[ (  ( 13 * __DATA_NUM )  + __tid ) ] )  * x2[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  /  ( (double)1 + pow( ( (double)1.4 / x2[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y2[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.27 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.9 )  ) )  +  ( (double)1.5 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y2[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0018 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)7.4 )  ) )  +  ( (double)2 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y2[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x2[ (  ( 14 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 12 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 13 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)250000 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)9 )  ) )  +  ( (double)58 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y2[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.019 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.6 )  ) )  +  ( (double)0.82 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)250 )  ) )  )  ) ;
	y2[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)62000 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10.1 )  ) )  +  ( (double)30 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)3000 )  ) )  )  ) ;
	y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  (  ( z[0] * z[1] )  / z[2] )  * log(  ( z[11] / x2[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  ) ) ;
	y2[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.75 * exp( ( (double)0.035 *  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) )  /  ( (double)1 + exp( ( (double)0.015 *  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)140 )  )  ) )  ) ;
	y2[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)8000 * exp( (  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)8.5 )  ) )  +  ( (double)7 * exp( (  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)300 )  ) )  )  ) ;
	y2[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( z[31] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.2 ) ) ;
	y2[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)160 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)200 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)2500 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y2[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)1600 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)2000 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)10000 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y2[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.35 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)17 )  ) )  +  ( (double)2 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)150 )  ) )  )  ) ;
	y2[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( z[32] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x2[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x2[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y2[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)85 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)10.5 )  ) )  +  ( (double)370 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)62 )  ) )  )  ) ;
	y2[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( z[35] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x2[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x2[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)11 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)28 )  ) )  +  ( (double)0.2 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y2[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( -  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.051335 * exp( (  ( -  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  )  ) ;
	y2[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( (double)0.4 * z[37] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( (double)0.00011 * pow( ( z[11] / (double)5.4 )  , (double)0.16 ) ) ;
	y2[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( z[39] * z[40] * pow( ( z[11] / (double)1 )  , (double)0.24 ) ) ;
	y2[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[45] / z[9] )  , (double)3 ) *  ( (double)1 +  ( z[10] / z[47] )  )  )  )  ) ;
	y2[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[47] / z[10] )  *  ( (double)1 + pow( ( z[9] / z[45] )  , (double)3 ) )  )  )  ) ;
	y2[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  (  ( z[49] - (double)1 )  * z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y2[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[53] / x2[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( x2[ (  ( 2 * __DATA_NUM )  + __tid ) ] / z[55] )  , (double)1.12 ) )  )  )  ) ;
	y2[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[55] / x2[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  , (double)1.12 ) *  ( (double)1 + pow( ( x2[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[53] )  , (double)1.06 ) )  )  )  ) ;
	y2[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( (double)0.37 /  ( (double)1 +  ( z[57] / x2[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y2[ (  ( 37 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  +  ( z[51] * y2[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 38 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[62] / x2[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y2[ (  ( 39 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y2[ (  ( 38 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 40 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[64] / x2[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y2[ (  ( 41 * __DATA_NUM )  + __tid ) ] =  (  ( z[59] * y2[ (  ( 38 * __DATA_NUM )  + __tid ) ] )  +  ( z[60] * y2[ (  ( 39 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 42 * __DATA_NUM )  + __tid ) ] =  (  ( z[73] - x2[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  + z[74] ) ;
	y2[ (  ( 43 * __DATA_NUM )  + __tid ) ] =  ( z[85] - x2[ (  ( 36 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 44 * __DATA_NUM )  + __tid ) ] = exp( (  ( - (double)20 )  * pow( ( z[85] - z[84] )  , (double)2 ) )  );
	y2[ (  ( 45 * __DATA_NUM )  + __tid ) ] =  ( z[79] * x2[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 46 * __DATA_NUM )  + __tid ) ] =  (  ( - (double)0.4 )  * x2[ (  ( 34 * __DATA_NUM )  + __tid ) ] * z[75] ) ;
	y2[ (  ( 47 * __DATA_NUM )  + __tid ) ] =  (  ( z[86] * pow( ( z[87] - z[85] )  , (double)5 ) )  +  ( z[88] *  ( z[87] - z[85] )  )  ) ;
	y2[ (  ( 48 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y2[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	y2[ (  ( 49 * __DATA_NUM )  + __tid ) ] =  ( z[14] * x2[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 50 * __DATA_NUM )  + __tid ) ] =  ( (double)0.1 * z[17] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 51 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)0.8 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  ) ;
	y2[ (  ( 52 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.014 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5 )  ) )  +  ( (double)4000 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y2[ (  ( 53 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0000185 * z[19] * y2[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 54 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 9 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 11 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 55 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)2200000 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7.4 )  ) )  +  ( (double)11 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y2[ (  ( 56 * __DATA_NUM )  + __tid ) ] =  (  ( z[27] * z[24] * z[26] * z[23] )  /  ( z[25] * z[28] * z[22] )  ) ;
	y2[ (  ( 57 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)40 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)6.3 )  ) )  +  ( (double)1.5 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10000 )  ) )  )  ) ;
	y2[ (  ( 58 * __DATA_NUM )  + __tid ) ] =  ( z[30] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.4 ) ) ;
	y2[ (  ( 59 * __DATA_NUM )  + __tid ) ] =  (  ( (double)3 * exp( (  ( - (double)0.048 )  *  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) *  ( (double)1 + exp( ( (double)0.064 *  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)38 )  )  ) )  )  /  ( (double)1 + exp( ( (double)0.03 *  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)70 )  )  ) )  ) ;
	y2[ (  ( 60 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 19 * __DATA_NUM )  + __tid ) ] *  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  (  ( (double)0.6 * x2[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  +  ( (double)0.4 * x2[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  * x2[ (  ( 21 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 61 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)200 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)13 )  ) )  +  ( (double)20 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y2[ (  ( 62 * __DATA_NUM )  + __tid ) ] =  ( z[33] * y2[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x2[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x2[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y2[ (  ( 63 * __DATA_NUM )  + __tid ) ] =  ( z[36] * y2[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x2[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x2[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 64 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.067083 * exp( (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  )  ) ;
	y2[ (  ( 65 * __DATA_NUM )  + __tid ) ] =  ( z[37] * y2[ (  ( 2 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 66 * __DATA_NUM )  + __tid ) ] =  ( (double)0.8 /  ( (double)1 + pow( ( x2[ (  ( 4 * __DATA_NUM )  + __tid ) ] / (double)0.1 )  , (double)2 ) )  ) ;
	y2[ (  ( 67 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  ( z[49] * z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y2[ (  ( 68 * __DATA_NUM )  + __tid ) ] =  ( z[9] * exp( (  (  ( - (double)0.82 )  * z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y2[ (  ( 69 * __DATA_NUM )  + __tid ) ] =  ( z[74] * x2[ (  ( 31 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 70 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x2[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  - x2[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 71 * __DATA_NUM )  + __tid ) ] =  (  ( z[77] * x2[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 44 * __DATA_NUM )  + __tid ) ] )  -  ( z[82] * x2[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 72 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y2[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x2[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 73 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  ( x2[ (  ( 34 * __DATA_NUM )  + __tid ) ] + x2[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y2[ (  ( 1 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y2[ (  ( 49 * __DATA_NUM )  + __tid ) ] )  )  ) - y2[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y2[ (  ( 75 * __DATA_NUM )  + __tid ) ] =  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[10] )  :  (  (  (  ( (double)2 * z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( z[10] * exp( (  (  ( - (double)2 )  * z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - (double)2 )  * z[2] * x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y2[ (  ( 76 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.1027 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)0.25 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)50 )  ) )  )  ) ;
	y2[ (  ( 77 * __DATA_NUM )  + __tid ) ] =  ( z[19] * y2[ (  ( 75 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 78 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)480 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7 )  ) )  +  ( (double)2.2 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y2[ (  ( 79 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0676 * y2[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 80 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( (double)0.3 * y2[ (  ( 79 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 81 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1800 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)14 )  ) )  +  ( (double)66 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y2[ (  ( 82 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0006 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)6.7 )  ) )  +  ( (double)1.2 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)25 )  ) )  )  ) ;
	y2[ (  ( 83 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 17 * __DATA_NUM )  + __tid ) ] /  ( y2[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 84 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)20 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)11.5 )  ) )  +  ( (double)5 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y2[ (  ( 85 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 23 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 86 * __DATA_NUM )  + __tid ) ] =  ( (double)3.7 * y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 87 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)4.4 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)16 )  ) )  +  ( (double)0.2 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)500 )  ) )  )  ) ;
	y2[ (  ( 88 * __DATA_NUM )  + __tid ) ] =  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] ==  ( - (double)3 )  ?  ( y2[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] * (double)13.0077 )  :  (  ( y2[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] *  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  /  ( (double)1 - exp( (  ( -  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  / (double)13 )  ) )  )  ) ;
	y2[ (  ( 89 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 + pow( ( (double)0.0012 / y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y2[ (  ( 90 * __DATA_NUM )  + __tid ) ] =  ( z[41] * y2[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 91 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[44] / x2[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) *  ( (double)1 +  ( y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] / z[46] )  )  )  )  ) ;
	y2[ (  ( 92 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  +  ( z[43] * y2[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 93 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[54] / y2[ (  ( 68 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( z[11] / z[56] )  , (double)1.12 ) )  )  )  ) ;
	y2[ (  ( 94 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[63] / y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y2[ (  ( 95 * __DATA_NUM )  + __tid ) ] =  ( z[70] *  ( x2[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 96 * __DATA_NUM )  + __tid ) ] =  (  ( z[76] * y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 70 * __DATA_NUM )  + __tid ) ] )  -  ( z[81] * x2[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 97 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y2[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x2[ (  ( 34 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 98 * __DATA_NUM )  + __tid ) ] =  ( z[89] * y2[ (  ( 73 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 99 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 50 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 100 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000365 * z[19] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 101 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 79 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 102 * __DATA_NUM )  + __tid ) ] =  ( z[29] * y2[ (  ( 75 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 16 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 17 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 103 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 59 * __DATA_NUM )  + __tid ) ] /  ( y2[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 104 * __DATA_NUM )  + __tid ) ] =  (  ( (double)8 / (double)3 )  * pow(y2[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)3 ) * y2[ (  ( 83 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 105 * __DATA_NUM )  + __tid ) ] =  (  ( pow(y2[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 ) * (double)1 )  /  (  ( (double)0.00014 * exp( (  ( -  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)9.1 )  ) )  +  ( (double)0.2 * exp( (  ( -  (  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)500 )  ) )  )  ) ;
	y2[ (  ( 106 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1450 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)260 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y2[ (  ( 107 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 65 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 108 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y2[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 109 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 30 * __DATA_NUM )  + __tid ) ] *  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  * y2[ (  ( 66 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 110 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[46] / y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  *  ( (double)1 + pow( ( x2[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[44] )  , (double)3 ) )  )  )  ) ;
	y2[ (  ( 111 * __DATA_NUM )  + __tid ) ] =  ( z[58] * z[3] * (double)1 *  (  ( y2[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 34 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  -  ( z[50] * y2[ (  ( 93 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y2[ (  ( 112 * __DATA_NUM )  + __tid ) ] =  ( z[65] * (double)1 *  (  ( z[59] * y2[ (  ( 38 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  -  ( y2[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 94 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y2[ (  ( 113 * __DATA_NUM )  + __tid ) ] =  (  ( (double)280000 * pow( ( y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) )  +  ( z[68] * y2[ (  ( 101 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 114 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y2[ (  ( 42 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y2[ (  ( 69 * __DATA_NUM )  + __tid ) ] )  )  ) - y2[ (  ( 42 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y2[ (  ( 115 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 98 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 43 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 116 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0001027 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)5 * exp( (  ( - x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y2[ (  ( 117 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 100 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 118 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 119 * __DATA_NUM )  + __tid ) ] =  ( z[28] * y2[ (  ( 118 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 120 * __DATA_NUM )  + __tid ) ] =  ( (double)2 * pow(y2[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)2 ) * pow(y2[ (  ( 83 * __DATA_NUM )  + __tid ) ] , (double)2 ) ) ;
	y2[ (  ( 121 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)10 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)2.5 * exp( ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)300 )  ) )  )  ) ;
	y2[ (  ( 122 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y2[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 123 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 91 * __DATA_NUM )  + __tid ) ] )  +  ( z[42] * y2[ (  ( 110 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 124 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y2[ (  ( 94 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 125 * __DATA_NUM )  + __tid ) ] =  ( z[66] *  ( y2[ (  ( 114 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  * x2[ (  ( 29 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 126 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000377 * pow( ( y2[ (  ( 114 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) ) ;
	y2[ (  ( 127 * __DATA_NUM )  + __tid ) ] =  (  ( z[78] * x2[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  -  ( z[83] * x2[ (  ( 35 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 128 * __DATA_NUM )  + __tid ) ] =  (  ( - y2[ (  ( 47 * __DATA_NUM )  + __tid ) ] )  + y2[ (  ( 115 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 129 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 /  ( (double)1 +  (  ( z[18] * y2[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  /  ( y2[ (  ( 51 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 76 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 7 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y2[ (  ( 130 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 /  ( (double)1 +  (  ( z[21] * y2[ (  ( 78 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  /  ( z[20] * y2[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 55 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y2[ (  ( 131 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 118 * __DATA_NUM )  + __tid ) ] +  ( y2[ (  ( 74 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y2[ (  ( 132 * __DATA_NUM )  + __tid ) ] = pow(y2[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 );
	y2[ (  ( 133 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 122 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 134 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[56] / z[11] )  , (double)1.12 ) *  ( (double)1 + pow( ( y2[ (  ( 68 * __DATA_NUM )  + __tid ) ] / z[54] )  , (double)1.06 ) )  )  )  ) ;
	y2[ (  ( 135 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 94 * __DATA_NUM )  + __tid ) ] )  +  ( z[61] * y2[ (  ( 124 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 136 * __DATA_NUM )  + __tid ) ] =  ( z[69] *  ( x2[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 137 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 107 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 90 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 88 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 133 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 109 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 138 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 - y2[ (  ( 129 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 139 * __DATA_NUM )  + __tid ) ] =  ( z[26] * y2[ (  ( 131 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 140 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 141 * __DATA_NUM )  + __tid ) ] =  (  ( z[50] * y2[ (  ( 93 * __DATA_NUM )  + __tid ) ] )  +  ( z[52] * y2[ (  ( 134 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 142 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  (  ( y2[ (  ( 97 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y2[ (  ( 96 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 143 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 - y2[ (  ( 130 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 144 * __DATA_NUM )  + __tid ) ] =  ( z[48] * z[3] * (double)1 *  (  ( y2[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 91 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  -  ( y2[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 31 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y2[ (  ( 145 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 65 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 122 * __DATA_NUM )  + __tid ) ] +  ( (double)3 * y2[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  +  ( (double)3 * y2[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 146 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 90 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y2[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y2[ (  ( 147 * __DATA_NUM )  + __tid ) ] =  ( (double)0.08 /  ( (double)1 +  ( (double)0.36 / y2[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y2[ (  ( 148 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 58 * __DATA_NUM )  + __tid ) ] *  ( x2[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  ( y2[ (  ( 132 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 104 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 120 * __DATA_NUM )  + __tid ) ] )  * x2[ (  ( 18 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 149 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 99 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 117 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 85 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 140 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 137 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 111 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 144 * __DATA_NUM )  + __tid ) ] ) ;
	y2[ (  ( 150 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 25 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 109 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 23 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 50 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 100 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 88 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y2[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y2[ (  ( 149 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  / z[3] ) ;
	k2[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( - y2[ (  ( 145 * __DATA_NUM )  + __tid ) ] )  /  ( z[2] * z[12] )  ) ;
	k2[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y2[ (  ( 150 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  /  ( z[2] * z[12] )  ) ;
	k2[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  (  (  ( -  (  (  ( y2[ (  ( 146 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y2[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  - y2[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  )  /  ( (double)2 * z[2] * z[12] )  )  + y2[ (  ( 142 * __DATA_NUM )  + __tid ) ] ) ;
	k2[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( z[15] *  ( z[16] - x2[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  + y2[ (  ( 46 * __DATA_NUM )  + __tid ) ] )  -  ( y2[ (  ( 111 * __DATA_NUM )  + __tid ) ] /  ( z[2] * z[12] )  )  )  +  ( y2[ (  ( 112 * __DATA_NUM )  + __tid ) ] /  ( (double)4 * z[2] * z[12] )  )  ) ;
	k2[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( x2[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  +  ( y2[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 138 * __DATA_NUM )  + __tid ) ] )  )  -  ( x2[ (  ( 5 * __DATA_NUM )  + __tid ) ] *  ( y2[ (  ( 129 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k2[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  (  (  ( x2[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  +  ( x2[ (  ( 7 * __DATA_NUM )  + __tid ) ] * z[18] )  )  -  ( x2[ (  ( 6 * __DATA_NUM )  + __tid ) ] *  ( y2[ (  ( 6 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k2[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  (  (  ( y2[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  +  ( x2[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  -  ( x2[ (  ( 7 * __DATA_NUM )  + __tid ) ] *  ( y2[ (  ( 7 * __DATA_NUM )  + __tid ) ] + z[18] )  )  ) ;
	k2[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 8 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 52 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  (  ( x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 78 * __DATA_NUM )  + __tid ) ] )  +  ( y2[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 143 * __DATA_NUM )  + __tid ) ] )  )  -  ( x2[ (  ( 9 * __DATA_NUM )  + __tid ) ] *  ( y2[ (  ( 130 * __DATA_NUM )  + __tid ) ] + y2[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k2[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  (  (  ( x2[ (  ( 9 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  +  ( x2[ (  ( 11 * __DATA_NUM )  + __tid ) ] * z[21] )  )  -  ( x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( y2[ (  ( 78 * __DATA_NUM )  + __tid ) ] + z[20] )  )  ) ;
	k2[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  (  (  ( y2[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  +  ( x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] * z[20] )  )  -  ( x2[ (  ( 11 * __DATA_NUM )  + __tid ) ] *  ( y2[ (  ( 55 * __DATA_NUM )  + __tid ) ] + z[21] )  )  ) ;
	k2[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( x2[ (  ( 14 * __DATA_NUM )  + __tid ) ] * z[24] )  +  ( x2[ (  ( 13 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  -  ( x2[ (  ( 12 * __DATA_NUM )  + __tid ) ] *  ( y2[ (  ( 139 * __DATA_NUM )  + __tid ) ] + z[25] )  )  ) ;
	k2[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  (  (  ( x2[ (  ( 12 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 139 * __DATA_NUM )  + __tid ) ] )  +  ( y2[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[22] )  )  -  ( x2[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( z[23] + y2[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k2[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  (  (  ( y2[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[27] )  +  ( x2[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[25] )  )  -  ( x2[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( z[24] +  ( z[28] * y2[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	k2[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 81 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 57 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 15 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 82 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 18 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 105 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 84 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 20 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 61 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 21 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 121 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 22 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 24 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 106 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 86 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  )  -  ( z[34] * x2[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 26 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 87 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 27 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 64 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 92 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 123 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 141 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 37 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 135 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x2[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  -  ( y2[ (  ( 41 * __DATA_NUM )  + __tid ) ] * x2[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  (  ( x2[ (  ( 30 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 113 * __DATA_NUM )  + __tid ) ] )  -  ( x2[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y2[ (  ( 147 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 126 * __DATA_NUM )  + __tid ) ] *  ( (double)1 -  ( x2[ (  ( 29 * __DATA_NUM )  + __tid ) ] + x2[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  )  )  -  (  ( y2[ (  ( 113 * __DATA_NUM )  + __tid ) ] + z[67] )  * x2[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  ) ;
	k2[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 136 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[71] )  ) ;
	k2[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( - y2[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y2[ (  ( 136 * __DATA_NUM )  + __tid ) ] )  - y2[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[72] )  ) ;
	k2[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( y2[ (  ( 96 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 71 * __DATA_NUM )  + __tid ) ] ) ;
	k2[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 71 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y2[ (  ( 97 * __DATA_NUM )  + __tid ) ] ) ;
	k2[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  (  ( y2[ (  ( 127 * __DATA_NUM )  + __tid ) ] - y2[ (  ( 45 * __DATA_NUM )  + __tid ) ] )  - y2[ (  ( 72 * __DATA_NUM )  + __tid ) ] ) ;
	k2[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y2[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 0 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 1 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 2 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 3 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 3 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 4 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 5 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 6 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 7 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 8 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 9 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 11 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 12 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 15 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 16 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 17 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 18 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 19 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 20 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 21 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 22 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 23 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 24 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 25 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 26 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 27 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 28 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 29 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 30 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 31 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 31 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 32 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 33 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 34 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 35 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	x3[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 36 * __DATA_NUM )  + __tid ) ] +  ( k2[ (  ( 36 * __DATA_NUM )  + __tid ) ] *  ( d / (double)2 )  )  ) ;
	y3[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  (  ( t >= z[4] )  &&  ( t <= z[5] )  &&  (  (  ( t - z[4] )  -  ( floor(  (  ( t - z[4] )  / z[6] )  ) * z[6] )  )  <= z[7] )  )  ? z[8] : (double)0 ) ;
	y3[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( z[13] - x3[ (  ( 3 * __DATA_NUM )  + __tid ) ] )  + z[14] ) ;
	y3[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[9] )  :  (  (  (  ( z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x3[ (  ( 1 * __DATA_NUM )  + __tid ) ] -  ( z[9] * exp( (  (  ( - z[2] )  * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ? x3[ (  ( 2 * __DATA_NUM )  + __tid ) ] :  (  (  (  ( z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x3[ (  ( 2 * __DATA_NUM )  + __tid ) ] -  ( z[11] * exp( (  (  ( - z[2] )  * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y3[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( z[17] * y3[ (  ( 2 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x3[ (  ( 5 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 7 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)26 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)0.02 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y3[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1300 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)0.04 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y3[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)9000000000 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)5 )  ) )  +  ( (double)8000 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y3[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  ( x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( x3[ (  ( 12 * __DATA_NUM )  + __tid ) ] + x3[ (  ( 13 * __DATA_NUM )  + __tid ) ] )  * x3[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  /  ( (double)1 + pow( ( (double)1.4 / x3[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y3[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.27 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.9 )  ) )  +  ( (double)1.5 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y3[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0018 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)7.4 )  ) )  +  ( (double)2 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y3[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x3[ (  ( 14 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 12 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 13 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)250000 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)9 )  ) )  +  ( (double)58 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y3[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.019 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.6 )  ) )  +  ( (double)0.82 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)250 )  ) )  )  ) ;
	y3[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)62000 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10.1 )  ) )  +  ( (double)30 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)3000 )  ) )  )  ) ;
	y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  (  ( z[0] * z[1] )  / z[2] )  * log(  ( z[11] / x3[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  ) ) ;
	y3[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.75 * exp( ( (double)0.035 *  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) )  /  ( (double)1 + exp( ( (double)0.015 *  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)140 )  )  ) )  ) ;
	y3[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)8000 * exp( (  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)8.5 )  ) )  +  ( (double)7 * exp( (  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)300 )  ) )  )  ) ;
	y3[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( z[31] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.2 ) ) ;
	y3[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)160 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)200 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)2500 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y3[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)1600 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)2000 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)10000 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y3[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.35 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)17 )  ) )  +  ( (double)2 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)150 )  ) )  )  ) ;
	y3[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( z[32] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x3[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x3[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y3[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)85 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)10.5 )  ) )  +  ( (double)370 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)62 )  ) )  )  ) ;
	y3[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( z[35] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x3[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x3[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)11 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)28 )  ) )  +  ( (double)0.2 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y3[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( -  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.051335 * exp( (  ( -  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  )  ) ;
	y3[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( (double)0.4 * z[37] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( (double)0.00011 * pow( ( z[11] / (double)5.4 )  , (double)0.16 ) ) ;
	y3[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( z[39] * z[40] * pow( ( z[11] / (double)1 )  , (double)0.24 ) ) ;
	y3[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[45] / z[9] )  , (double)3 ) *  ( (double)1 +  ( z[10] / z[47] )  )  )  )  ) ;
	y3[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[47] / z[10] )  *  ( (double)1 + pow( ( z[9] / z[45] )  , (double)3 ) )  )  )  ) ;
	y3[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  (  ( z[49] - (double)1 )  * z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y3[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[53] / x3[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( x3[ (  ( 2 * __DATA_NUM )  + __tid ) ] / z[55] )  , (double)1.12 ) )  )  )  ) ;
	y3[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[55] / x3[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  , (double)1.12 ) *  ( (double)1 + pow( ( x3[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[53] )  , (double)1.06 ) )  )  )  ) ;
	y3[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( (double)0.37 /  ( (double)1 +  ( z[57] / x3[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y3[ (  ( 37 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  +  ( z[51] * y3[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 38 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[62] / x3[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y3[ (  ( 39 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y3[ (  ( 38 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 40 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[64] / x3[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y3[ (  ( 41 * __DATA_NUM )  + __tid ) ] =  (  ( z[59] * y3[ (  ( 38 * __DATA_NUM )  + __tid ) ] )  +  ( z[60] * y3[ (  ( 39 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 42 * __DATA_NUM )  + __tid ) ] =  (  ( z[73] - x3[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  + z[74] ) ;
	y3[ (  ( 43 * __DATA_NUM )  + __tid ) ] =  ( z[85] - x3[ (  ( 36 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 44 * __DATA_NUM )  + __tid ) ] = exp( (  ( - (double)20 )  * pow( ( z[85] - z[84] )  , (double)2 ) )  );
	y3[ (  ( 45 * __DATA_NUM )  + __tid ) ] =  ( z[79] * x3[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 46 * __DATA_NUM )  + __tid ) ] =  (  ( - (double)0.4 )  * x3[ (  ( 34 * __DATA_NUM )  + __tid ) ] * z[75] ) ;
	y3[ (  ( 47 * __DATA_NUM )  + __tid ) ] =  (  ( z[86] * pow( ( z[87] - z[85] )  , (double)5 ) )  +  ( z[88] *  ( z[87] - z[85] )  )  ) ;
	y3[ (  ( 48 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y3[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	y3[ (  ( 49 * __DATA_NUM )  + __tid ) ] =  ( z[14] * x3[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 50 * __DATA_NUM )  + __tid ) ] =  ( (double)0.1 * z[17] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 51 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)0.8 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  ) ;
	y3[ (  ( 52 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.014 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5 )  ) )  +  ( (double)4000 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y3[ (  ( 53 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0000185 * z[19] * y3[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 54 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 9 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 11 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 55 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)2200000 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7.4 )  ) )  +  ( (double)11 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y3[ (  ( 56 * __DATA_NUM )  + __tid ) ] =  (  ( z[27] * z[24] * z[26] * z[23] )  /  ( z[25] * z[28] * z[22] )  ) ;
	y3[ (  ( 57 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)40 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)6.3 )  ) )  +  ( (double)1.5 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10000 )  ) )  )  ) ;
	y3[ (  ( 58 * __DATA_NUM )  + __tid ) ] =  ( z[30] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.4 ) ) ;
	y3[ (  ( 59 * __DATA_NUM )  + __tid ) ] =  (  ( (double)3 * exp( (  ( - (double)0.048 )  *  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) *  ( (double)1 + exp( ( (double)0.064 *  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)38 )  )  ) )  )  /  ( (double)1 + exp( ( (double)0.03 *  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)70 )  )  ) )  ) ;
	y3[ (  ( 60 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 19 * __DATA_NUM )  + __tid ) ] *  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  (  ( (double)0.6 * x3[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  +  ( (double)0.4 * x3[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  * x3[ (  ( 21 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 61 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)200 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)13 )  ) )  +  ( (double)20 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y3[ (  ( 62 * __DATA_NUM )  + __tid ) ] =  ( z[33] * y3[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x3[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x3[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y3[ (  ( 63 * __DATA_NUM )  + __tid ) ] =  ( z[36] * y3[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x3[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x3[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 64 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.067083 * exp( (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  )  ) ;
	y3[ (  ( 65 * __DATA_NUM )  + __tid ) ] =  ( z[37] * y3[ (  ( 2 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 66 * __DATA_NUM )  + __tid ) ] =  ( (double)0.8 /  ( (double)1 + pow( ( x3[ (  ( 4 * __DATA_NUM )  + __tid ) ] / (double)0.1 )  , (double)2 ) )  ) ;
	y3[ (  ( 67 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  ( z[49] * z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y3[ (  ( 68 * __DATA_NUM )  + __tid ) ] =  ( z[9] * exp( (  (  ( - (double)0.82 )  * z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y3[ (  ( 69 * __DATA_NUM )  + __tid ) ] =  ( z[74] * x3[ (  ( 31 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 70 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x3[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  - x3[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 71 * __DATA_NUM )  + __tid ) ] =  (  ( z[77] * x3[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 44 * __DATA_NUM )  + __tid ) ] )  -  ( z[82] * x3[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 72 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y3[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x3[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 73 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  ( x3[ (  ( 34 * __DATA_NUM )  + __tid ) ] + x3[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y3[ (  ( 1 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y3[ (  ( 49 * __DATA_NUM )  + __tid ) ] )  )  ) - y3[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y3[ (  ( 75 * __DATA_NUM )  + __tid ) ] =  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[10] )  :  (  (  (  ( (double)2 * z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( z[10] * exp( (  (  ( - (double)2 )  * z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - (double)2 )  * z[2] * x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y3[ (  ( 76 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.1027 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)0.25 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)50 )  ) )  )  ) ;
	y3[ (  ( 77 * __DATA_NUM )  + __tid ) ] =  ( z[19] * y3[ (  ( 75 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 78 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)480 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7 )  ) )  +  ( (double)2.2 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y3[ (  ( 79 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0676 * y3[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 80 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( (double)0.3 * y3[ (  ( 79 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 81 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1800 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)14 )  ) )  +  ( (double)66 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y3[ (  ( 82 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0006 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)6.7 )  ) )  +  ( (double)1.2 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)25 )  ) )  )  ) ;
	y3[ (  ( 83 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 17 * __DATA_NUM )  + __tid ) ] /  ( y3[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 84 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)20 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)11.5 )  ) )  +  ( (double)5 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y3[ (  ( 85 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 23 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 86 * __DATA_NUM )  + __tid ) ] =  ( (double)3.7 * y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 87 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)4.4 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)16 )  ) )  +  ( (double)0.2 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)500 )  ) )  )  ) ;
	y3[ (  ( 88 * __DATA_NUM )  + __tid ) ] =  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] ==  ( - (double)3 )  ?  ( y3[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] * (double)13.0077 )  :  (  ( y3[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] *  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  /  ( (double)1 - exp( (  ( -  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  / (double)13 )  ) )  )  ) ;
	y3[ (  ( 89 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 + pow( ( (double)0.0012 / y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y3[ (  ( 90 * __DATA_NUM )  + __tid ) ] =  ( z[41] * y3[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 91 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[44] / x3[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) *  ( (double)1 +  ( y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] / z[46] )  )  )  )  ) ;
	y3[ (  ( 92 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  +  ( z[43] * y3[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 93 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[54] / y3[ (  ( 68 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( z[11] / z[56] )  , (double)1.12 ) )  )  )  ) ;
	y3[ (  ( 94 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[63] / y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y3[ (  ( 95 * __DATA_NUM )  + __tid ) ] =  ( z[70] *  ( x3[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 96 * __DATA_NUM )  + __tid ) ] =  (  ( z[76] * y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 70 * __DATA_NUM )  + __tid ) ] )  -  ( z[81] * x3[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 97 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y3[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x3[ (  ( 34 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 98 * __DATA_NUM )  + __tid ) ] =  ( z[89] * y3[ (  ( 73 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 99 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 50 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 100 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000365 * z[19] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 101 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 79 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 102 * __DATA_NUM )  + __tid ) ] =  ( z[29] * y3[ (  ( 75 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 16 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 17 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 103 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 59 * __DATA_NUM )  + __tid ) ] /  ( y3[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 104 * __DATA_NUM )  + __tid ) ] =  (  ( (double)8 / (double)3 )  * pow(y3[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)3 ) * y3[ (  ( 83 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 105 * __DATA_NUM )  + __tid ) ] =  (  ( pow(y3[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 ) * (double)1 )  /  (  ( (double)0.00014 * exp( (  ( -  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)9.1 )  ) )  +  ( (double)0.2 * exp( (  ( -  (  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)500 )  ) )  )  ) ;
	y3[ (  ( 106 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1450 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)260 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y3[ (  ( 107 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 65 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 108 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y3[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 109 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 30 * __DATA_NUM )  + __tid ) ] *  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  * y3[ (  ( 66 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 110 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[46] / y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  *  ( (double)1 + pow( ( x3[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[44] )  , (double)3 ) )  )  )  ) ;
	y3[ (  ( 111 * __DATA_NUM )  + __tid ) ] =  ( z[58] * z[3] * (double)1 *  (  ( y3[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 34 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  -  ( z[50] * y3[ (  ( 93 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y3[ (  ( 112 * __DATA_NUM )  + __tid ) ] =  ( z[65] * (double)1 *  (  ( z[59] * y3[ (  ( 38 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  -  ( y3[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 94 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y3[ (  ( 113 * __DATA_NUM )  + __tid ) ] =  (  ( (double)280000 * pow( ( y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) )  +  ( z[68] * y3[ (  ( 101 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 114 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y3[ (  ( 42 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y3[ (  ( 69 * __DATA_NUM )  + __tid ) ] )  )  ) - y3[ (  ( 42 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y3[ (  ( 115 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 98 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 43 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 116 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0001027 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)5 * exp( (  ( - x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y3[ (  ( 117 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 100 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 118 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 119 * __DATA_NUM )  + __tid ) ] =  ( z[28] * y3[ (  ( 118 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 120 * __DATA_NUM )  + __tid ) ] =  ( (double)2 * pow(y3[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)2 ) * pow(y3[ (  ( 83 * __DATA_NUM )  + __tid ) ] , (double)2 ) ) ;
	y3[ (  ( 121 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)10 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)2.5 * exp( ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)300 )  ) )  )  ) ;
	y3[ (  ( 122 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y3[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 123 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 91 * __DATA_NUM )  + __tid ) ] )  +  ( z[42] * y3[ (  ( 110 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 124 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y3[ (  ( 94 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 125 * __DATA_NUM )  + __tid ) ] =  ( z[66] *  ( y3[ (  ( 114 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  * x3[ (  ( 29 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 126 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000377 * pow( ( y3[ (  ( 114 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) ) ;
	y3[ (  ( 127 * __DATA_NUM )  + __tid ) ] =  (  ( z[78] * x3[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  -  ( z[83] * x3[ (  ( 35 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 128 * __DATA_NUM )  + __tid ) ] =  (  ( - y3[ (  ( 47 * __DATA_NUM )  + __tid ) ] )  + y3[ (  ( 115 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 129 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 /  ( (double)1 +  (  ( z[18] * y3[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  /  ( y3[ (  ( 51 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 76 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 7 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y3[ (  ( 130 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 /  ( (double)1 +  (  ( z[21] * y3[ (  ( 78 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  /  ( z[20] * y3[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 55 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y3[ (  ( 131 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 118 * __DATA_NUM )  + __tid ) ] +  ( y3[ (  ( 74 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y3[ (  ( 132 * __DATA_NUM )  + __tid ) ] = pow(y3[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 );
	y3[ (  ( 133 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 122 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 134 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[56] / z[11] )  , (double)1.12 ) *  ( (double)1 + pow( ( y3[ (  ( 68 * __DATA_NUM )  + __tid ) ] / z[54] )  , (double)1.06 ) )  )  )  ) ;
	y3[ (  ( 135 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 94 * __DATA_NUM )  + __tid ) ] )  +  ( z[61] * y3[ (  ( 124 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 136 * __DATA_NUM )  + __tid ) ] =  ( z[69] *  ( x3[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 137 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 107 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 90 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 88 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 133 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 109 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 138 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 - y3[ (  ( 129 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 139 * __DATA_NUM )  + __tid ) ] =  ( z[26] * y3[ (  ( 131 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 140 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 141 * __DATA_NUM )  + __tid ) ] =  (  ( z[50] * y3[ (  ( 93 * __DATA_NUM )  + __tid ) ] )  +  ( z[52] * y3[ (  ( 134 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 142 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  (  ( y3[ (  ( 97 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y3[ (  ( 96 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 143 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 - y3[ (  ( 130 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 144 * __DATA_NUM )  + __tid ) ] =  ( z[48] * z[3] * (double)1 *  (  ( y3[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 91 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  -  ( y3[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 31 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y3[ (  ( 145 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 65 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 122 * __DATA_NUM )  + __tid ) ] +  ( (double)3 * y3[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  +  ( (double)3 * y3[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 146 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 90 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y3[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y3[ (  ( 147 * __DATA_NUM )  + __tid ) ] =  ( (double)0.08 /  ( (double)1 +  ( (double)0.36 / y3[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y3[ (  ( 148 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 58 * __DATA_NUM )  + __tid ) ] *  ( x3[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  ( y3[ (  ( 132 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 104 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 120 * __DATA_NUM )  + __tid ) ] )  * x3[ (  ( 18 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 149 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 99 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 117 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 85 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 140 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 137 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 111 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 144 * __DATA_NUM )  + __tid ) ] ) ;
	y3[ (  ( 150 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 25 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 109 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 23 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 50 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 100 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 88 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y3[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y3[ (  ( 149 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  / z[3] ) ;
	k3[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( - y3[ (  ( 145 * __DATA_NUM )  + __tid ) ] )  /  ( z[2] * z[12] )  ) ;
	k3[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y3[ (  ( 150 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  /  ( z[2] * z[12] )  ) ;
	k3[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  (  (  ( -  (  (  ( y3[ (  ( 146 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y3[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  - y3[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  )  /  ( (double)2 * z[2] * z[12] )  )  + y3[ (  ( 142 * __DATA_NUM )  + __tid ) ] ) ;
	k3[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( z[15] *  ( z[16] - x3[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  + y3[ (  ( 46 * __DATA_NUM )  + __tid ) ] )  -  ( y3[ (  ( 111 * __DATA_NUM )  + __tid ) ] /  ( z[2] * z[12] )  )  )  +  ( y3[ (  ( 112 * __DATA_NUM )  + __tid ) ] /  ( (double)4 * z[2] * z[12] )  )  ) ;
	k3[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( x3[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  +  ( y3[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 138 * __DATA_NUM )  + __tid ) ] )  )  -  ( x3[ (  ( 5 * __DATA_NUM )  + __tid ) ] *  ( y3[ (  ( 129 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k3[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  (  (  ( x3[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  +  ( x3[ (  ( 7 * __DATA_NUM )  + __tid ) ] * z[18] )  )  -  ( x3[ (  ( 6 * __DATA_NUM )  + __tid ) ] *  ( y3[ (  ( 6 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k3[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  (  (  ( y3[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  +  ( x3[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  -  ( x3[ (  ( 7 * __DATA_NUM )  + __tid ) ] *  ( y3[ (  ( 7 * __DATA_NUM )  + __tid ) ] + z[18] )  )  ) ;
	k3[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 8 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 52 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  (  ( x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 78 * __DATA_NUM )  + __tid ) ] )  +  ( y3[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 143 * __DATA_NUM )  + __tid ) ] )  )  -  ( x3[ (  ( 9 * __DATA_NUM )  + __tid ) ] *  ( y3[ (  ( 130 * __DATA_NUM )  + __tid ) ] + y3[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k3[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  (  (  ( x3[ (  ( 9 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  +  ( x3[ (  ( 11 * __DATA_NUM )  + __tid ) ] * z[21] )  )  -  ( x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( y3[ (  ( 78 * __DATA_NUM )  + __tid ) ] + z[20] )  )  ) ;
	k3[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  (  (  ( y3[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  +  ( x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] * z[20] )  )  -  ( x3[ (  ( 11 * __DATA_NUM )  + __tid ) ] *  ( y3[ (  ( 55 * __DATA_NUM )  + __tid ) ] + z[21] )  )  ) ;
	k3[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( x3[ (  ( 14 * __DATA_NUM )  + __tid ) ] * z[24] )  +  ( x3[ (  ( 13 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  -  ( x3[ (  ( 12 * __DATA_NUM )  + __tid ) ] *  ( y3[ (  ( 139 * __DATA_NUM )  + __tid ) ] + z[25] )  )  ) ;
	k3[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  (  (  ( x3[ (  ( 12 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 139 * __DATA_NUM )  + __tid ) ] )  +  ( y3[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[22] )  )  -  ( x3[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( z[23] + y3[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k3[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  (  (  ( y3[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[27] )  +  ( x3[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[25] )  )  -  ( x3[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( z[24] +  ( z[28] * y3[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	k3[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 81 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 57 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 15 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 82 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 18 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 105 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 84 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 20 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 61 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 21 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 121 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 22 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 24 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 106 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 86 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  )  -  ( z[34] * x3[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 26 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 87 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 27 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 64 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 92 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 123 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 141 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 37 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 135 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x3[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  -  ( y3[ (  ( 41 * __DATA_NUM )  + __tid ) ] * x3[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  (  ( x3[ (  ( 30 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 113 * __DATA_NUM )  + __tid ) ] )  -  ( x3[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y3[ (  ( 147 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 126 * __DATA_NUM )  + __tid ) ] *  ( (double)1 -  ( x3[ (  ( 29 * __DATA_NUM )  + __tid ) ] + x3[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  )  )  -  (  ( y3[ (  ( 113 * __DATA_NUM )  + __tid ) ] + z[67] )  * x3[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  ) ;
	k3[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 136 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[71] )  ) ;
	k3[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( - y3[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y3[ (  ( 136 * __DATA_NUM )  + __tid ) ] )  - y3[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[72] )  ) ;
	k3[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( y3[ (  ( 96 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 71 * __DATA_NUM )  + __tid ) ] ) ;
	k3[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 71 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y3[ (  ( 97 * __DATA_NUM )  + __tid ) ] ) ;
	k3[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  (  ( y3[ (  ( 127 * __DATA_NUM )  + __tid ) ] - y3[ (  ( 45 * __DATA_NUM )  + __tid ) ] )  - y3[ (  ( 72 * __DATA_NUM )  + __tid ) ] ) ;
	k3[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y3[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 0 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 1 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 2 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 3 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 3 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 4 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 5 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 6 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 7 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 8 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 9 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 10 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 11 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 12 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 13 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 14 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 15 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 16 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 17 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 18 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 19 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 20 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 21 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 22 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 23 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 24 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 25 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 26 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 27 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 28 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 29 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 30 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 31 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 31 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 32 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 33 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 34 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 35 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	x4[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 36 * __DATA_NUM )  + __tid ) ] +  ( k3[ (  ( 36 * __DATA_NUM )  + __tid ) ] * d )  ) ;
	y4[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  (  ( t >= z[4] )  &&  ( t <= z[5] )  &&  (  (  ( t - z[4] )  -  ( floor(  (  ( t - z[4] )  / z[6] )  ) * z[6] )  )  <= z[7] )  )  ? z[8] : (double)0 ) ;
	y4[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( z[13] - x4[ (  ( 3 * __DATA_NUM )  + __tid ) ] )  + z[14] ) ;
	y4[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[9] )  :  (  (  (  ( z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x4[ (  ( 1 * __DATA_NUM )  + __tid ) ] -  ( z[9] * exp( (  (  ( - z[2] )  * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ? x4[ (  ( 2 * __DATA_NUM )  + __tid ) ] :  (  (  (  ( z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( x4[ (  ( 2 * __DATA_NUM )  + __tid ) ] -  ( z[11] * exp( (  (  ( - z[2] )  * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - z[2] )  * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y4[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( z[17] * y4[ (  ( 2 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x4[ (  ( 5 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 7 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)26 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)0.02 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y4[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1300 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)0.04 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)800 )  ) )  )  ) ;
	y4[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)9000000000 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)5 )  ) )  +  ( (double)8000 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y4[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  ( x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( x4[ (  ( 12 * __DATA_NUM )  + __tid ) ] + x4[ (  ( 13 * __DATA_NUM )  + __tid ) ] )  * x4[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  /  ( (double)1 + pow( ( (double)1.4 / x4[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y4[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.27 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.9 )  ) )  +  ( (double)1.5 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y4[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0018 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)7.4 )  ) )  +  ( (double)2 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y4[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x4[ (  ( 14 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 12 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 13 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)250000 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)9 )  ) )  +  ( (double)58 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y4[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.019 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5.6 )  ) )  +  ( (double)0.82 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)250 )  ) )  )  ) ;
	y4[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)62000 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10.1 )  ) )  +  ( (double)30 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)3000 )  ) )  )  ) ;
	y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  (  ( z[0] * z[1] )  / z[2] )  * log(  ( z[11] / x4[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  ) ) ;
	y4[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.75 * exp( ( (double)0.035 *  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) )  /  ( (double)1 + exp( ( (double)0.015 *  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)140 )  )  ) )  ) ;
	y4[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)8000 * exp( (  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)8.5 )  ) )  +  ( (double)7 * exp( (  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  / (double)300 )  ) )  )  ) ;
	y4[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( z[31] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.2 ) ) ;
	y4[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)160 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)200 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)2500 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y4[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( (double)1 /  (  ( (double)1600 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)28 )  ) )  +  ( (double)2000 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)1000 )  ) )  )  )  +  ( (double)1 /  ( (double)10000 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  )  ) ;
	y4[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.35 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)17 )  ) )  +  ( (double)2 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)150 )  ) )  )  ) ;
	y4[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( z[32] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x4[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x4[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y4[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)85 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)10.5 )  ) )  +  ( (double)370 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)62 )  ) )  )  ) ;
	y4[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( z[35] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] * pow(x4[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x4[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)11 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)28 )  ) )  +  ( (double)0.2 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y4[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( -  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.051335 * exp( (  ( -  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  )  / (double)11.3 )  ) )  )  ) ;
	y4[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( (double)0.4 * z[37] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( (double)0.00011 * pow( ( z[11] / (double)5.4 )  , (double)0.16 ) ) ;
	y4[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( z[39] * z[40] * pow( ( z[11] / (double)1 )  , (double)0.24 ) ) ;
	y4[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[45] / z[9] )  , (double)3 ) *  ( (double)1 +  ( z[10] / z[47] )  )  )  )  ) ;
	y4[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[47] / z[10] )  *  ( (double)1 + pow( ( z[9] / z[45] )  , (double)3 ) )  )  )  ) ;
	y4[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  (  ( z[49] - (double)1 )  * z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y4[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[53] / x4[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( x4[ (  ( 2 * __DATA_NUM )  + __tid ) ] / z[55] )  , (double)1.12 ) )  )  )  ) ;
	y4[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[55] / x4[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  , (double)1.12 ) *  ( (double)1 + pow( ( x4[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[53] )  , (double)1.06 ) )  )  )  ) ;
	y4[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( (double)0.37 /  ( (double)1 +  ( z[57] / x4[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y4[ (  ( 37 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  +  ( z[51] * y4[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 38 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[62] / x4[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y4[ (  ( 39 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y4[ (  ( 38 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 40 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[64] / x4[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y4[ (  ( 41 * __DATA_NUM )  + __tid ) ] =  (  ( z[59] * y4[ (  ( 38 * __DATA_NUM )  + __tid ) ] )  +  ( z[60] * y4[ (  ( 39 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 42 * __DATA_NUM )  + __tid ) ] =  (  ( z[73] - x4[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  + z[74] ) ;
	y4[ (  ( 43 * __DATA_NUM )  + __tid ) ] =  ( z[85] - x4[ (  ( 36 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 44 * __DATA_NUM )  + __tid ) ] = exp( (  ( - (double)20 )  * pow( ( z[85] - z[84] )  , (double)2 ) )  );
	y4[ (  ( 45 * __DATA_NUM )  + __tid ) ] =  ( z[79] * x4[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 46 * __DATA_NUM )  + __tid ) ] =  (  ( - (double)0.4 )  * x4[ (  ( 34 * __DATA_NUM )  + __tid ) ] * z[75] ) ;
	y4[ (  ( 47 * __DATA_NUM )  + __tid ) ] =  (  ( z[86] * pow( ( z[87] - z[85] )  , (double)5 ) )  +  ( z[88] *  ( z[87] - z[85] )  )  ) ;
	y4[ (  ( 48 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y4[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	y4[ (  ( 49 * __DATA_NUM )  + __tid ) ] =  ( z[14] * x4[ (  ( 3 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 50 * __DATA_NUM )  + __tid ) ] =  ( (double)0.1 * z[17] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 6 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 8 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 51 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)0.8 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  ) ;
	y4[ (  ( 52 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.014 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)5 )  ) )  +  ( (double)4000 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)100 )  ) )  )  ) ;
	y4[ (  ( 53 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0000185 * z[19] * y4[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 54 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 9 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 11 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 55 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)2200000 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7.4 )  ) )  +  ( (double)11 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y4[ (  ( 56 * __DATA_NUM )  + __tid ) ] =  (  ( z[27] * z[24] * z[26] * z[23] )  /  ( z[25] * z[28] * z[22] )  ) ;
	y4[ (  ( 57 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)40 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)6.3 )  ) )  +  ( (double)1.5 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)10000 )  ) )  )  ) ;
	y4[ (  ( 58 * __DATA_NUM )  + __tid ) ] =  ( z[30] * z[3] * pow( ( z[11] / (double)5.4 )  , (double)0.4 ) ) ;
	y4[ (  ( 59 * __DATA_NUM )  + __tid ) ] =  (  ( (double)3 * exp( (  ( - (double)0.048 )  *  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)10 )  )  ) *  ( (double)1 + exp( ( (double)0.064 *  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)38 )  )  ) )  )  /  ( (double)1 + exp( ( (double)0.03 *  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)70 )  )  ) )  ) ;
	y4[ (  ( 60 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 19 * __DATA_NUM )  + __tid ) ] *  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  (  ( (double)0.6 * x4[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  +  ( (double)0.4 * x4[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  * x4[ (  ( 21 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 61 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)200 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)13 )  ) )  +  ( (double)20 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y4[ (  ( 62 * __DATA_NUM )  + __tid ) ] =  ( z[33] * y4[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x4[ (  ( 22 * __DATA_NUM )  + __tid ) ] , (double)2 ) *  (  ( (double)0.9 * x4[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + (double)0.1 )  ) ;
	y4[ (  ( 63 * __DATA_NUM )  + __tid ) ] =  ( z[36] * y4[ (  ( 2 * __DATA_NUM )  + __tid ) ] * pow(x4[ (  ( 24 * __DATA_NUM )  + __tid ) ] , (double)3 ) * x4[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 64 * __DATA_NUM )  + __tid ) ] =  (  ( (double)0.0038 * exp( (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  /  ( (double)1 +  ( (double)0.067083 * exp( (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)13.5 )  / (double)11.3 )  ) )  )  ) ;
	y4[ (  ( 65 * __DATA_NUM )  + __tid ) ] =  ( z[37] * y4[ (  ( 2 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 66 * __DATA_NUM )  + __tid ) ] =  ( (double)0.8 /  ( (double)1 + pow( ( x4[ (  ( 4 * __DATA_NUM )  + __tid ) ] / (double)0.1 )  , (double)2 ) )  ) ;
	y4[ (  ( 67 * __DATA_NUM )  + __tid ) ] =  ( (double)1 * exp( (  ( z[49] * z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y4[ (  ( 68 * __DATA_NUM )  + __tid ) ] =  ( z[9] * exp( (  (  ( - (double)0.82 )  * z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) ) ;
	y4[ (  ( 69 * __DATA_NUM )  + __tid ) ] =  ( z[74] * x4[ (  ( 31 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 70 * __DATA_NUM )  + __tid ) ] =  (  (  ( (double)1 - x4[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  - x4[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 71 * __DATA_NUM )  + __tid ) ] =  (  ( z[77] * x4[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 44 * __DATA_NUM )  + __tid ) ] )  -  ( z[82] * x4[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 72 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y4[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x4[ (  ( 35 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 73 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  ( x4[ (  ( 34 * __DATA_NUM )  + __tid ) ] + x4[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y4[ (  ( 1 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y4[ (  ( 49 * __DATA_NUM )  + __tid ) ] )  )  ) - y4[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y4[ (  ( 75 * __DATA_NUM )  + __tid ) ] =  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] == (double)0 ?  ( - z[10] )  :  (  (  (  ( (double)2 * z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  *  ( y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( z[10] * exp( (  (  ( - (double)2 )  * z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  )  /  ( (double)1 - exp( (  (  ( - (double)2 )  * z[2] * x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  /  ( z[0] * z[1] )  )  ) )  )  ) ;
	y4[ (  ( 76 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.1027 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)0.25 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)50 )  ) )  )  ) ;
	y4[ (  ( 77 * __DATA_NUM )  + __tid ) ] =  ( z[19] * y4[ (  ( 75 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 78 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)480 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)7 )  ) )  +  ( (double)2.2 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)65 )  ) )  )  ) ;
	y4[ (  ( 79 * __DATA_NUM )  + __tid ) ] =  ( (double)0.0676 * y4[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 80 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] -  ( (double)0.3 * y4[ (  ( 79 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 81 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1800 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)14 )  ) )  +  ( (double)66 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)65 )  ) )  )  ) ;
	y4[ (  ( 82 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0006 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)6.7 )  ) )  +  ( (double)1.2 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)25 )  ) )  )  ) ;
	y4[ (  ( 83 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 17 * __DATA_NUM )  + __tid ) ] /  ( y4[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 84 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)20 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)11.5 )  ) )  +  ( (double)5 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)300 )  ) )  )  ) ;
	y4[ (  ( 85 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 23 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 86 * __DATA_NUM )  + __tid ) ] =  ( (double)3.7 * y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 87 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)4.4 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)16 )  ) )  +  ( (double)0.2 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)500 )  ) )  )  ) ;
	y4[ (  ( 88 * __DATA_NUM )  + __tid ) ] =  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] ==  ( - (double)3 )  ?  ( y4[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] * (double)13.0077 )  :  (  ( y4[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] *  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  /  ( (double)1 - exp( (  ( -  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] + (double)3 )  )  / (double)13 )  ) )  )  ) ;
	y4[ (  ( 89 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 + pow( ( (double)0.0012 / y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) )  ) ;
	y4[ (  ( 90 * __DATA_NUM )  + __tid ) ] =  ( z[41] * y4[ (  ( 75 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 91 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[44] / x4[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  , (double)3 ) *  ( (double)1 +  ( y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] / z[46] )  )  )  )  ) ;
	y4[ (  ( 92 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  +  ( z[43] * y4[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 93 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[54] / y4[ (  ( 68 * __DATA_NUM )  + __tid ) ] )  , (double)1.06 ) *  ( (double)1 + pow( ( z[11] / z[56] )  , (double)1.12 ) )  )  )  ) ;
	y4[ (  ( 94 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( z[63] / y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y4[ (  ( 95 * __DATA_NUM )  + __tid ) ] =  ( z[70] *  ( x4[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 96 * __DATA_NUM )  + __tid ) ] =  (  ( z[76] * y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 70 * __DATA_NUM )  + __tid ) ] )  -  ( z[81] * x4[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 97 * __DATA_NUM )  + __tid ) ] =  ( z[80] * pow(y4[ (  ( 48 * __DATA_NUM )  + __tid ) ] , (double)2 ) * x4[ (  ( 34 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 98 * __DATA_NUM )  + __tid ) ] =  ( z[89] * y4[ (  ( 73 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 99 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 50 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 100 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000365 * z[19] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 101 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 79 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 9 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 102 * __DATA_NUM )  + __tid ) ] =  ( z[29] * y4[ (  ( 75 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 16 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 17 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 103 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 59 * __DATA_NUM )  + __tid ) ] /  ( y4[ (  ( 17 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 59 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 104 * __DATA_NUM )  + __tid ) ] =  (  ( (double)8 / (double)3 )  * pow(y4[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)3 ) * y4[ (  ( 83 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 105 * __DATA_NUM )  + __tid ) ] =  (  ( pow(y4[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 ) * (double)1 )  /  (  ( (double)0.00014 * exp( (  ( -  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)9.1 )  ) )  +  ( (double)0.2 * exp( (  ( -  (  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  - (double)97 )  )  / (double)500 )  ) )  )  ) ;
	y4[ (  ( 106 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)1450 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)20 )  ) )  +  ( (double)260 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)100 )  ) )  )  ) ;
	y4[ (  ( 107 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 65 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 108 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y4[ (  ( 3 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 109 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 30 * __DATA_NUM )  + __tid ) ] *  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  * y4[ (  ( 66 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 110 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  (  ( z[46] / y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  *  ( (double)1 + pow( ( x4[ (  ( 1 * __DATA_NUM )  + __tid ) ] / z[44] )  , (double)3 ) )  )  )  ) ;
	y4[ (  ( 111 * __DATA_NUM )  + __tid ) ] =  ( z[58] * z[3] * (double)1 *  (  ( y4[ (  ( 36 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 34 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  -  ( z[50] * y4[ (  ( 93 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y4[ (  ( 112 * __DATA_NUM )  + __tid ) ] =  ( z[65] * (double)1 *  (  ( z[59] * y4[ (  ( 38 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  -  ( y4[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 94 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y4[ (  ( 113 * __DATA_NUM )  + __tid ) ] =  (  ( (double)280000 * pow( ( y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) )  +  ( z[68] * y4[ (  ( 101 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 114 * __DATA_NUM )  + __tid ) ] =  (  ( sqrt(  ( pow(y4[ (  ( 42 * __DATA_NUM )  + __tid ) ] , (double)2 ) +  ( (double)4 * y4[ (  ( 69 * __DATA_NUM )  + __tid ) ] )  )  ) - y4[ (  ( 42 * __DATA_NUM )  + __tid ) ] )  / (double)2 ) ;
	y4[ (  ( 115 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 98 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 43 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 116 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)0.0001027 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)8 )  ) )  +  ( (double)5 * exp( (  ( - x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  / (double)400 )  ) )  )  ) ;
	y4[ (  ( 117 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 100 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 118 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 119 * __DATA_NUM )  + __tid ) ] =  ( z[28] * y4[ (  ( 118 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 120 * __DATA_NUM )  + __tid ) ] =  ( (double)2 * pow(y4[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)2 ) * pow(y4[ (  ( 83 * __DATA_NUM )  + __tid ) ] , (double)2 ) ) ;
	y4[ (  ( 121 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  (  ( (double)10 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)17 )  ) )  +  ( (double)2.5 * exp( ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] / (double)300 )  ) )  )  ) ;
	y4[ (  ( 122 * __DATA_NUM )  + __tid ) ] =  ( z[38] * y4[ (  ( 2 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 89 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 123 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 91 * __DATA_NUM )  + __tid ) ] )  +  ( z[42] * y4[ (  ( 110 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 124 * __DATA_NUM )  + __tid ) ] =  ( (double)1 - y4[ (  ( 94 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 125 * __DATA_NUM )  + __tid ) ] =  ( z[66] *  ( y4[ (  ( 114 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  * x4[ (  ( 29 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 126 * __DATA_NUM )  + __tid ) ] =  ( (double)0.000377 * pow( ( y4[ (  ( 114 * __DATA_NUM )  + __tid ) ] / (double)1 )  , (double)2 ) ) ;
	y4[ (  ( 127 * __DATA_NUM )  + __tid ) ] =  (  ( z[78] * x4[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  -  ( z[83] * x4[ (  ( 35 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 128 * __DATA_NUM )  + __tid ) ] =  (  ( - y4[ (  ( 47 * __DATA_NUM )  + __tid ) ] )  + y4[ (  ( 115 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 129 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 /  ( (double)1 +  (  ( z[18] * y4[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  /  ( y4[ (  ( 51 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 76 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 7 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y4[ (  ( 130 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 /  ( (double)1 +  (  ( z[21] * y4[ (  ( 78 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  /  ( z[20] * y4[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 55 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y4[ (  ( 131 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 118 * __DATA_NUM )  + __tid ) ] +  ( y4[ (  ( 74 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y4[ (  ( 132 * __DATA_NUM )  + __tid ) ] = pow(y4[ (  ( 103 * __DATA_NUM )  + __tid ) ] , (double)4 );
	y4[ (  ( 133 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 122 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 134 * __DATA_NUM )  + __tid ) ] =  ( (double)1 /  ( (double)1 +  ( pow( ( z[56] / z[11] )  , (double)1.12 ) *  ( (double)1 + pow( ( y4[ (  ( 68 * __DATA_NUM )  + __tid ) ] / z[54] )  , (double)1.06 ) )  )  )  ) ;
	y4[ (  ( 135 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 40 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 94 * __DATA_NUM )  + __tid ) ] )  +  ( z[61] * y4[ (  ( 124 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 136 * __DATA_NUM )  + __tid ) ] =  ( z[69] *  ( x4[ (  ( 32 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 137 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 107 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 90 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 88 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 133 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 109 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 138 * __DATA_NUM )  + __tid ) ] =  ( (double)0.01 - y4[ (  ( 129 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 139 * __DATA_NUM )  + __tid ) ] =  ( z[26] * y4[ (  ( 131 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 140 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 25 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 141 * __DATA_NUM )  + __tid ) ] =  (  ( z[50] * y4[ (  ( 93 * __DATA_NUM )  + __tid ) ] )  +  ( z[52] * y4[ (  ( 134 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 142 * __DATA_NUM )  + __tid ) ] =  ( z[75] *  (  ( y4[ (  ( 97 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y4[ (  ( 96 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 143 * __DATA_NUM )  + __tid ) ] =  ( (double)0.04 - y4[ (  ( 130 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 144 * __DATA_NUM )  + __tid ) ] =  ( z[48] * z[3] * (double)1 *  (  ( y4[ (  ( 67 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 91 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  -  ( y4[ (  ( 33 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 31 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	y4[ (  ( 145 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 4 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 62 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 63 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 53 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 65 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 122 * __DATA_NUM )  + __tid ) ] +  ( (double)3 * y4[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  +  ( (double)3 * y4[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 146 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 77 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 90 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y4[ (  ( 144 * __DATA_NUM )  + __tid ) ] )  ) ;
	y4[ (  ( 147 * __DATA_NUM )  + __tid ) ] =  ( (double)0.08 /  ( (double)1 +  ( (double)0.36 / y4[ (  ( 114 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	y4[ (  ( 148 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 58 * __DATA_NUM )  + __tid ) ] *  ( x4[ (  ( 0 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  *  ( y4[ (  ( 132 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 104 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 120 * __DATA_NUM )  + __tid ) ] )  * x4[ (  ( 18 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 149 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 99 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 117 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 102 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 85 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 140 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 137 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 111 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 144 * __DATA_NUM )  + __tid ) ] ) ;
	y4[ (  ( 150 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 148 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 60 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 25 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 109 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 23 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 50 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 100 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 28 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 108 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 88 * __DATA_NUM )  + __tid ) ] )  -  ( (double)2 * y4[ (  ( 111 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y4[ (  ( 149 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  / z[3] ) ;
	k4[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  (  ( - y4[ (  ( 145 * __DATA_NUM )  + __tid ) ] )  /  ( z[2] * z[12] )  ) ;
	k4[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  (  ( -  ( y4[ (  ( 150 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  /  ( z[2] * z[12] )  ) ;
	k4[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  (  (  ( -  (  (  ( y4[ (  ( 146 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y4[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  - y4[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  )  /  ( (double)2 * z[2] * z[12] )  )  + y4[ (  ( 142 * __DATA_NUM )  + __tid ) ] ) ;
	k4[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( z[15] *  ( z[16] - x4[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  + y4[ (  ( 46 * __DATA_NUM )  + __tid ) ] )  -  ( y4[ (  ( 111 * __DATA_NUM )  + __tid ) ] /  ( z[2] * z[12] )  )  )  +  ( y4[ (  ( 112 * __DATA_NUM )  + __tid ) ] /  ( (double)4 * z[2] * z[12] )  )  ) ;
	k4[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  (  (  ( x4[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  +  ( y4[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 138 * __DATA_NUM )  + __tid ) ] )  )  -  ( x4[ (  ( 5 * __DATA_NUM )  + __tid ) ] *  ( y4[ (  ( 129 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k4[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  (  (  ( x4[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 76 * __DATA_NUM )  + __tid ) ] )  +  ( x4[ (  ( 7 * __DATA_NUM )  + __tid ) ] * z[18] )  )  -  ( x4[ (  ( 6 * __DATA_NUM )  + __tid ) ] *  ( y4[ (  ( 6 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k4[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  (  (  ( y4[ (  ( 5 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 116 * __DATA_NUM )  + __tid ) ] )  +  ( x4[ (  ( 6 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 51 * __DATA_NUM )  + __tid ) ] )  )  -  ( x4[ (  ( 7 * __DATA_NUM )  + __tid ) ] *  ( y4[ (  ( 7 * __DATA_NUM )  + __tid ) ] + z[18] )  )  ) ;
	k4[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 8 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 52 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  (  (  ( x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 78 * __DATA_NUM )  + __tid ) ] )  +  ( y4[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 143 * __DATA_NUM )  + __tid ) ] )  )  -  ( x4[ (  ( 9 * __DATA_NUM )  + __tid ) ] *  ( y4[ (  ( 130 * __DATA_NUM )  + __tid ) ] + y4[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k4[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  (  (  ( x4[ (  ( 9 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  +  ( x4[ (  ( 11 * __DATA_NUM )  + __tid ) ] * z[21] )  )  -  ( x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] *  ( y4[ (  ( 78 * __DATA_NUM )  + __tid ) ] + z[20] )  )  ) ;
	k4[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  (  (  ( y4[ (  ( 54 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  +  ( x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] * z[20] )  )  -  ( x4[ (  ( 11 * __DATA_NUM )  + __tid ) ] *  ( y4[ (  ( 55 * __DATA_NUM )  + __tid ) ] + z[21] )  )  ) ;
	k4[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  (  (  ( x4[ (  ( 14 * __DATA_NUM )  + __tid ) ] * z[24] )  +  ( x4[ (  ( 13 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  -  ( x4[ (  ( 12 * __DATA_NUM )  + __tid ) ] *  ( y4[ (  ( 139 * __DATA_NUM )  + __tid ) ] + z[25] )  )  ) ;
	k4[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  (  (  ( x4[ (  ( 12 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 139 * __DATA_NUM )  + __tid ) ] )  +  ( y4[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[22] )  )  -  ( x4[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( z[23] + y4[ (  ( 56 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	k4[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  (  (  ( y4[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[27] )  +  ( x4[ (  ( 12 * __DATA_NUM )  + __tid ) ] * z[25] )  )  -  ( x4[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( z[24] +  ( z[28] * y4[ (  ( 80 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  )  ) ;
	k4[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 13 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 81 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 14 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 57 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 15 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 82 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 18 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 105 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 84 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 20 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 61 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 21 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 121 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 22 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 24 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 106 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 86 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  )  -  ( z[34] * x4[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 26 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 87 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 27 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 64 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 92 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 123 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 141 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 37 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 135 * __DATA_NUM )  + __tid ) ] *  ( (double)1 - x4[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  -  ( y4[ (  ( 41 * __DATA_NUM )  + __tid ) ] * x4[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  (  ( x4[ (  ( 30 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 113 * __DATA_NUM )  + __tid ) ] )  -  ( x4[ (  ( 29 * __DATA_NUM )  + __tid ) ] * y4[ (  ( 147 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 126 * __DATA_NUM )  + __tid ) ] *  ( (double)1 -  ( x4[ (  ( 29 * __DATA_NUM )  + __tid ) ] + x4[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  )  )  -  (  ( y4[ (  ( 113 * __DATA_NUM )  + __tid ) ] + z[67] )  * x4[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  ) ;
	k4[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 136 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 125 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[71] )  ) ;
	k4[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  (  (  (  ( - y4[ (  ( 112 * __DATA_NUM )  + __tid ) ] )  - y4[ (  ( 136 * __DATA_NUM )  + __tid ) ] )  - y4[ (  ( 95 * __DATA_NUM )  + __tid ) ] )  /  ( (double)2 * z[2] * z[72] )  ) ;
	k4[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( y4[ (  ( 96 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 71 * __DATA_NUM )  + __tid ) ] ) ;
	k4[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 71 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 127 * __DATA_NUM )  + __tid ) ] )  - y4[ (  ( 97 * __DATA_NUM )  + __tid ) ] ) ;
	k4[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  (  ( y4[ (  ( 127 * __DATA_NUM )  + __tid ) ] - y4[ (  ( 45 * __DATA_NUM )  + __tid ) ] )  - y4[ (  ( 72 * __DATA_NUM )  + __tid ) ] ) ;
	k4[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( z[90] *  ( y4[ (  ( 43 * __DATA_NUM )  + __tid ) ] - z[91] )  ) ;
	x5[ (  ( 0 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 0 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 0 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 0 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 1 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 1 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 1 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 1 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 2 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 2 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 2 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 2 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 3 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 3 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 3 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 3 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 3 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 3 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 4 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 4 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 4 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 4 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 5 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 5 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 5 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 5 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 5 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 5 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 6 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 6 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 6 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 6 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 7 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 7 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 7 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 7 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 7 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 7 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 8 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 8 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 8 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 8 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 9 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 9 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 9 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 9 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 9 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 9 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 10 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 10 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 10 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 10 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 11 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 11 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 11 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 11 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 12 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 12 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 12 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 12 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 12 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 12 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 13 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 13 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 13 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 13 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 13 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 13 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 14 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 14 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 14 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 14 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 14 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 14 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 15 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 15 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 15 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 15 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 16 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 16 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 16 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 16 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 17 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 17 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 17 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 17 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 18 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 18 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 18 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 18 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 19 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 19 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 19 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 19 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 20 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 20 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 20 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 20 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 21 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 21 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 21 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 21 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 22 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 22 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 22 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 22 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 23 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 23 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 23 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 23 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 24 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 24 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 24 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 24 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 25 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 25 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 25 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 25 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 26 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 26 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 26 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 26 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 27 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 27 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 27 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 27 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 28 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 28 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 28 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 28 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 29 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 29 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 29 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 29 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 29 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 29 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 30 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 30 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 30 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 30 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 31 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 31 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 31 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 31 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 32 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 32 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 32 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 32 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 33 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 33 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 33 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 33 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 34 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 34 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 34 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 34 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 35 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 35 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 35 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 35 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	x5[ (  ( 36 * __DATA_NUM )  + __tid ) ] =  ( x1[ (  ( 36 * __DATA_NUM )  + __tid ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 36 * __DATA_NUM )  + __tid ) ] +  ( (double)2 * k2[ (  ( 36 * __DATA_NUM )  + __tid ) ] )  +  ( (double)2 * k3[ (  ( 36 * __DATA_NUM )  + __tid ) ] )  + k4[ (  ( 36 * __DATA_NUM )  + __tid ) ] )  )  ) ;
	xo[ (  ( 0 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 0 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 1 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 1 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 2 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 2 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 3 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 3 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 4 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 4 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 5 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 5 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 6 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 6 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 7 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 7 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 8 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 8 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 9 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 9 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 10 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 10 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 11 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 11 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 12 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 12 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 13 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 13 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 14 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 14 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 15 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 15 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 16 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 16 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 17 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 17 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 18 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 18 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 19 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 19 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 20 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 20 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 21 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 21 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 22 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 22 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 23 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 23 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 24 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 24 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 25 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 25 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 26 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 26 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 27 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 27 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 28 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 28 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 29 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 29 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 30 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 30 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 31 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 31 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 32 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 32 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 33 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 33 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 34 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 34 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 35 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 35 * __DATA_NUM )  + __tid ) ];
	xo[ (  ( 36 * __DATA_NUM )  + __tid ) ] = x5[ (  ( 36 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 0 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 0 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 1 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 1 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 2 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 2 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 3 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 3 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 4 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 4 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 5 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 5 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 6 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 6 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 7 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 7 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 8 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 8 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 9 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 9 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 10 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 10 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 11 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 11 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 12 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 12 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 13 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 13 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 14 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 14 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 15 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 15 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 16 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 16 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 17 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 17 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 18 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 18 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 19 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 19 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 20 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 20 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 21 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 21 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 22 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 22 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 23 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 23 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 24 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 24 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 25 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 25 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 26 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 26 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 27 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 27 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 28 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 28 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 29 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 29 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 30 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 30 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 31 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 31 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 32 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 32 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 33 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 33 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 34 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 34 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 35 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 35 * __DATA_NUM )  + __tid ) ];
	xi[ (  ( 36 * __DATA_NUM )  + __tid ) ] = xo[ (  ( 36 * __DATA_NUM )  + __tid ) ];
}



