import java.lang.Math;


public final class JavaProgramGenerator{
public static void main ( String args[] ) {

	int __i;
	double xi[];
	double xo[];
	double x0[];
	double x1[];
	double x2[];
	double x3[];
	double x4[];
	double k1[];
	double k2[];
	double k3[];
	double k4[];
	double y0[];
	double y1[];
	double y2[];
	double y3[];
	double z[];
	double t;
	double d = 0.010000;
	int __DATA_NUM = 32;

	xi = new double[ ( 1 * __DATA_NUM ) ];
	xo = new double[ ( 1 * __DATA_NUM ) ];
	x0 = new double[ ( 1 * __DATA_NUM ) ];
	x1 = new double[ ( 1 * __DATA_NUM ) ];
	x2 = new double[ ( 1 * __DATA_NUM ) ];
	x3 = new double[ ( 1 * __DATA_NUM ) ];
	x4 = new double[ ( 1 * __DATA_NUM ) ];
	y0 = new double[ ( 0 * __DATA_NUM ) ];
	y1 = new double[ ( 0 * __DATA_NUM ) ];
	y2 = new double[ ( 0 * __DATA_NUM ) ];
	y3 = new double[ ( 0 * __DATA_NUM ) ];
	k1 = new double[ ( 1 * __DATA_NUM ) ];
	k2 = new double[ ( 1 * __DATA_NUM ) ];
	k3 = new double[ ( 1 * __DATA_NUM ) ];
	k4 = new double[ ( 1 * __DATA_NUM ) ];
	z = new double[0];
	for(t = 0.000000; ( t <= 400.000000 ) ;t =  ( t + d ) ){

		for(__i = 0; ( __i < __DATA_NUM ) ;__i++){

			x0[ (  ( 0 * __DATA_NUM )  + __i ) ] = xi[ (  ( 0 * __DATA_NUM )  + __i ) ];
			k1[ (  ( 0 * __DATA_NUM )  + __i ) ] = Math.exp( t );
			x1[ (  ( 0 * __DATA_NUM )  + __i ) ] =  ( x0[ (  ( 0 * __DATA_NUM )  + __i ) ] +  ( k1[ (  ( 0 * __DATA_NUM )  + __i ) ] *  ( d / (double)2 )  )  ) ;
			k2[ (  ( 0 * __DATA_NUM )  + __i ) ] = Math.exp(  ( t +  ( d / (double)2 )  )  );
			x2[ (  ( 0 * __DATA_NUM )  + __i ) ] =  ( x0[ (  ( 0 * __DATA_NUM )  + __i ) ] +  ( k2[ (  ( 0 * __DATA_NUM )  + __i ) ] *  ( d / (double)2 )  )  ) ;
			k3[ (  ( 0 * __DATA_NUM )  + __i ) ] = Math.exp(  ( t +  ( d / (double)2 )  )  );
			x3[ (  ( 0 * __DATA_NUM )  + __i ) ] =  ( x0[ (  ( 0 * __DATA_NUM )  + __i ) ] +  ( k3[ (  ( 0 * __DATA_NUM )  + __i ) ] * d )  ) ;
			k4[ (  ( 0 * __DATA_NUM )  + __i ) ] = Math.exp(  ( t + d )  );
			x4[ (  ( 0 * __DATA_NUM )  + __i ) ] =  ( x0[ (  ( 0 * __DATA_NUM )  + __i ) ] +  (  ( d / (double)6 )  *  ( k1[ (  ( 0 * __DATA_NUM )  + __i ) ] +  ( (double)2 * k2[ (  ( 0 * __DATA_NUM )  + __i ) ] )  +  ( (double)2 * k3[ (  ( 0 * __DATA_NUM )  + __i ) ] )  + k4[ (  ( 0 * __DATA_NUM )  + __i ) ] )  )  ) ;
			xo[ (  ( 0 * __DATA_NUM )  + __i ) ] = x4[ (  ( 0 * __DATA_NUM )  + __i ) ];
			xi[ (  ( 0 * __DATA_NUM )  + __i ) ] = xo[ (  ( 0 * __DATA_NUM )  + __i ) ];

		}


	}

}


}

